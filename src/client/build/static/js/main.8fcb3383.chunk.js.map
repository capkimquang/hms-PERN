{"version":3,"sources":["logo.svg","components/Services/Validate.js","components/API/CheckEmailExist.js","components/API/Login.js","containers/Authentication/Login.js","components/API/Register.js","containers/Authentication/Register.js","containers/Authentication/Home.js","containers/Authentication/ForgetPassword.js","containers/Dashboard/Patient/PatientDashboard.js","containers/Dashboard/Practitioner/PractitionerDashboard.js","components/Services/AppointmentStatus.js","containers/Table/AppointmentTable.js","containers/Others/SidebarFunction.js","containers/Others/DrawerAppBar.js","containers/Dashboard/Admin/AdminDashboard.js","App.js","index.js"],"names":["validate","type","value","name","pattern","status","email","phone","res","exec","nameStatus","checkEmailExist","a","data","axios","post","emailStatus","login","username","password","loginStatus","Login","state","hasError","error","button","open","handleEmailInput","event","validateStatus","target","then","message","setState","exist","console","log","handlePasswordInput","handleDialogClose","handleSubmit","dialogStatus","dialogMessage","dialogHasError","api_res","classes","this","props","Grid","container","component","className","root","CssBaseline","item","xs","sm","md","image","Paper","elevation","square","paper","Avatar","avatar","Typography","variant","form","TextField","margin","id","label","autoComplete","autoFocus","required","fullWidth","helperText","onChange","FormControlLabel","control","Checkbox","color","Button","submit","onClick","Dialog","onClose","aria-describedby","DialogContent","DialogContentText","DialogActions","Link","RouteLink","to","align","Component","withStyles","theme","height","backgroundImage","backgroundRepeat","backgroundColor","palette","grey","backgroundSize","backgroundPosition","spacing","display","flexDirection","alignItems","secondary","main","width","marginTop","withTheme","register","Register","confirmedPassword","registerStatus","handleNameInput","handlePhoneInput","handleConfirmedPasswordInput","passwordStatus","history","push","Container","maxWidth","justify","Home","sessionStorage","getItem","redirect","removeItem","Fragment","AppBar","position","appBar","Toolbar","toolbar","noWrap","toolbarTitle","href","link","heroContent","gutterBottom","ul","padding","listStyle","borderBottom","divider","flexWrap","flexGrow","cardHeader","cardPricing","justifyContent","marginBottom","footer","borderTop","paddingTop","paddingBottom","breakpoints","up","ForgetPassword","checkingResult","PatientDashboard","PractitionerDashboard","Upcomming","Chip","size","Completed","createData","disease","practitioner","room","time","date","rows","columns","PatientAppointmentTable","editDialog","newDialog","handleRowClick","row","handleNewClick","handleEditDialogClose","handleNewDialogClose","handleSave","handleDelete","handleNew","TableContainer","Table","stickyHeader","TableHead","TableRow","map","column","TableCell","TableBody","hover","aria-labelledby","DialogTitle","admin","patient","SidebarFunction","funcs","func","ListItem","ListItemIcon","ListItemText","primary","DrawerAppBar","barOpen","handleDrawer","clsx","appBarShift","IconButton","edge","aria-label","menuButton","menuButtonHidden","title","Drawer","drawerPaper","drawerPaperClose","toolbarIcon","Divider","List","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","enteringScreen","whiteSpace","overflowX","mixins","paddingRight","marginRight","AdminDashboard","view","getViewFromDrawerAppBar","viewFromDrawerAppBar","content","appBarSpacer","AppointmentTable","overflow","App","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8fcb3383.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","export const validate = (type, value) => {\n  const validate = {\n    name: {\n      pattern: /^[a-zA-ZàáâãèéêìíòóôõùúýÀÁÂÈÉÊÌÍÒÓÔÙÚÝ ]+$/u,\n      status: false\n    },\n    email: {\n      pattern: /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/,\n      status: false\n    },\n    phone: {\n      pattern: /^\\d{10}$/,\n      status: false\n    }\n  };\n\n  const res = {\n    name: false,\n    email: false,\n    phone: false\n  };\n\n  if (type === \"name\") {\n    res.name = (validate.name.pattern.exec(value) !== null) ? false : true;\n  } else if (type === \"email\") {\n    let nameStatus = validate.email.pattern.exec(value);\n    if (nameStatus !== null) res.email = false;\n    else res.email = true;\n  } else if (type === \"phone\") {\n    let nameStatus = validate.phone.pattern.exec(value);\n    if (nameStatus !== null) res.phone = false;\n    else res.phone = true;\n  }\n\n  return res;\n}\n","import axios from 'axios';\n\nexport const checkEmailExist = async (email) => {\n  let data = {\n    email: email\n  }\n\n  let res = await axios.post('http://localhost:3001/user/checkEmailExist', data);\n  return res.data.emailStatus;\n}\n","import axios from 'axios';\n\nexport const login = async (username, password) => {\n  let data = {\n    email: username,\n    password: password\n  }\n\n  let res = await axios.post('http://localhost:3001/user/login', data);\n  return res.data.loginStatus;\n}\n","import React, { Component }               from 'react';\nimport { BrowserRouter, Route, Switch }   from 'react-router-dom';\nimport { Link as RouteLink }              from 'react-router-dom';\n\nimport axios                              from 'axios';\n\nimport Avatar                             from '@material-ui/core/Avatar';\nimport Button                             from '@material-ui/core/Button';\nimport CssBaseline                        from '@material-ui/core/CssBaseline';\nimport TextField                          from '@material-ui/core/TextField';\nimport FormControlLabel                   from '@material-ui/core/FormControlLabel';\nimport Checkbox                           from '@material-ui/core/Checkbox';\nimport Link                               from '@material-ui/core/Link';\nimport Paper                              from '@material-ui/core/Paper';\nimport Box                                from '@material-ui/core/Box';\nimport Grid                               from '@material-ui/core/Grid';\nimport LockOutlinedIcon                   from '@material-ui/icons/LockOutlined';\nimport Typography                         from '@material-ui/core/Typography';\nimport { withStyles }                     from '@material-ui/core/styles';\nimport Container                          from '@material-ui/core/Container';\n\nimport Dialog                             from '@material-ui/core/Dialog';\nimport DialogActions                      from '@material-ui/core/DialogActions';\nimport DialogContent                      from '@material-ui/core/DialogContent';\nimport DialogContentText                  from '@material-ui/core/DialogContentText';\nimport DialogTitle                        from '@material-ui/core/DialogTitle';\n\nimport { validate }                       from '../../components/Services/Validate';\n\n// API -----------------------------------\nimport { checkEmailExist }                from '../../components/API/CheckEmailExist';\nimport { login }                          from \"../../components/API/Login\";\n\n\nconst style = (theme) => ({\n  root: {\n    height: '100vh'\n  },\n  image: {\n    backgroundImage: 'url(https://images.unsplash.com/photo-1551076805-e1869033e561?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2980&q=80)',\n    backgroundRepeat: 'no-repeat',\n    backgroundColor:\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n    backgroundSize: 'cover',\n    backgroundPosition: 'center'\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n});\n\nclass Login extends Component {\n  state = {\n    email: {\n      value: '',\n      hasError: false,\n      error: ''\n    },\n    password: {\n      value: '',\n      hasError: false,\n      error: ''\n    },\n    button: {\n      open: false,\n      error: ''\n    },\n    loginStatus: false\n  };\n\n  // login = async (username, password) => {\n  //   let data = {\n  //     email: username,\n  //     password: password\n  //   }\n  //   let res = await axios.post('http://localhost:3001/user/login', data);\n  //   console.log(res);\n  // }\n\n  handleEmailInput = (event) => {\n    let validateStatus = validate(\"email\", event.target.value);\n    let existStatus = false;\n    let api = checkEmailExist(event.target.value)\n              .then(message => this.setState({\n                email: {\n                  exist: message\n                }\n              }));\n    console.log(this.state.email.exist);\n    this.setState({\n      email: {\n          value: event.target.value,\n          hasError: validateStatus.email,\n          error: (validateStatus.email) ? 'Invalid email address' : ''\n        }\n    });\n  };\n  handlePasswordInput = (event) => {\n    this.setState({\n      password: {\n        value: event.target.value,\n        hasError: false,\n        error: ''\n      }\n    });\n  };\n  handleDialogClose = () => {\n      this.setState({\n        button: {\n          open: false,\n          error: ''\n        }\n      })\n  };\n  handleSubmit = async () => {\n      const dialogStatus = {\n        dialogMessage: '',\n        dialogHasError: false\n      };\n\n      if (this.state.email.hasError) {\n        dialogStatus.dialogHasError = true;\n        dialogStatus.dialogMessage = 'The given email is invalid. Please input the valid email.';\n        this.setState({\n          button: {\n            open: dialogStatus.dialogHasError,\n            error: dialogStatus.dialogMessage\n          }\n        });\n      }\n\n      // let res = axios.post('http://localhost:3001/user/login', {\n      //   email: this.state.email.value,\n      //   password: this.state.password.value\n      // }).then(res => this.setState({\n      //   loginStatus: res.data.loginStatus\n      // }));\n      //\n      // console.log(this.state.loginStatus);\n      let api_res = await login(this.state.email.value, this.state.password.value);\n      console.log(api_res);\n\n      // this.setState({\n      //             loginStatus: api_res['loginStatus'];\n      //           }));\n      //\n      // console.log(this.state.loginStatus);\n      // this.setState(\n      //   loginStatus: api.response\n      // )\n        // this.props.history.push(\"/loginTest\");\n      // if (this.state.loginStatus) this.props.history.push(\"/dashboard\");\n      };\n\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <Grid container component = \"main\" className = {classes.root}>\n        <CssBaseline />\n        <Grid item xs = {false} sm = {4} md = {7} className = {classes.image} />\n        <Grid item xs = {12} sm = {8} md = {5} component = {Paper} elevation = {6} square>\n          <div className = { classes.paper }>\n            <Avatar className = { classes.avatar }>\n              <LockOutlinedIcon />\n            </Avatar>\n            <Typography component = \"h1\" variant = \"h5\"> Login </Typography>\n            <form className = { classes.form }>\n              <TextField\n                variant       = \"outlined\"\n                margin        = \"normal\"\n                id            = \"email\"\n                label         = \"Email Address\"\n                name          = \"email\"\n                autoComplete  = \"email\"\n                autoFocus\n                required\n                fullWidth\n                value         = { this.state.email.value }\n                error         = { this.state.email.hasError }\n                helperText    = { this.state.email.error }\n                onChange      = { this.handleEmailInput }\n              />\n              <TextField\n                variant       = \"outlined\"\n                margin        = \"normal\"\n                id            = \"password\"\n                label         = \"Password\"\n                name          = \"password\"\n                type          = \"password\"\n                autoComplete  = \"current-password\"\n                required\n                fullWidth\n                value         = { this.state.password.value }\n                error         = { this.state.password.hasError }\n                helperText    = { this.state.password.error }\n                onChange      = { this.handlePasswordInput }\n              />\n              <FormControlLabel\n                control       = {\n                  <Checkbox value = \"remember\" color = \"primary\" />\n                }\n                label         = \"Remember me\"\n              />\n              <Button\n                fullWidth\n                variant       = \"contained\"\n                color         = \"primary\"\n                className     = { classes.submit }\n                onClick       = { this.handleSubmit }>\n                Login\n              </Button>\n              <Dialog\n                open              = { this.state.button.open }\n                onClose           = { this.handleDialogClose }\n                aria-describedby  = \"alert-dialog-description\">\n                <DialogContent>\n                  <DialogContentText id = \"alert-dialog-description\">\n                    { this.state.button.error }\n                  </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                  <Button onClick = { this.handleDialogClose } color = \"primary\">\n                    Got it!\n                  </Button>\n                </DialogActions>\n              </Dialog>\n              <Grid container>\n                <Grid item xs>\n                  <Link component = { RouteLink } to = \"/forgetPassword\">\n                    <Typography variant = \"body2\" align = \"left\">Forgot password</Typography>\n                  </Link>\n                </Grid>\n                <Grid item xs>\n                  <Link component = { RouteLink } to = \"/register\">\n                    <Typography variant = \"body2\" align = \"right\">Don't have an account?</Typography>\n                  </Link>\n                </Grid>\n              </Grid>\n            </form>\n          </div>\n        </Grid>\n      </Grid>\n    );\n  };\n}\n\nexport default withStyles(style, { withTheme: true })(Login);\n","import axios from 'axios';\n\nexport const register = async (name, email, password, phone) => {\n  let data = {\n    name: name,\n    email: email,\n    password: password,\n    phone: phone\n  }\n\n  let res = await axios.post('http://localhost:3001/user/login', data);\n  return res.data.loginStatus;\n}\n","\nimport React, { Component }               from 'react';\n\nimport { BrowserRouter, Route, Switch }   from 'react-router-dom';\nimport { Link as RouteLink }              from 'react-router-dom';\n\nimport Avatar                             from '@material-ui/core/Avatar';\nimport Button                             from '@material-ui/core/Button';\nimport CssBaseline                        from '@material-ui/core/CssBaseline';\nimport TextField                          from '@material-ui/core/TextField';\nimport FormControlLabel                   from '@material-ui/core/FormControlLabel';\nimport Checkbox                           from '@material-ui/core/Checkbox';\nimport Link                               from '@material-ui/core/Link';\nimport Paper                              from '@material-ui/core/Paper';\nimport Box                                from '@material-ui/core/Box';\nimport Grid                               from '@material-ui/core/Grid';\nimport Typography                         from '@material-ui/core/Typography';\nimport { withStyles }                     from '@material-ui/core/styles';\nimport Container                          from '@material-ui/core/Container';\nimport Dialog                             from '@material-ui/core/Dialog';\nimport DialogActions                      from '@material-ui/core/DialogActions';\nimport DialogContent                      from '@material-ui/core/DialogContent';\nimport DialogContentText                  from '@material-ui/core/DialogContentText';\nimport DialogTitle                        from '@material-ui/core/DialogTitle';\n\nimport LockOutlinedIcon                   from '@material-ui/icons/LockOutlined';\n\nimport { validate }                       from '../../components/Services/Validate';\n\n// API -----------------------------------\nimport { checkEmailExist }                from '../../components/API/CheckEmailExist';\nimport { register }                       from '../../components/API/Register';\n/*\ncan't use hooks because this is a component.\nso we can't useStyles API from Material UI\nuse withStyles instead.\n*/\nconst style = theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  }\n});\n\nclass Register extends Component {\n  state = {\n    name: {\n      value: '',\n      hasError: false,\n      error: ''\n    },\n    email: {\n      value: '',\n      hasError: false,\n      exist: false,\n      error: ''\n    },\n    phone: {\n      value: '',\n      hasError: false,\n      error: ''\n    },\n    password: {\n      value: '',\n      hasError: false,\n      error: ''\n    },\n    confirmedPassword: {\n      value: '',\n      hasError: false,\n      error: ''\n    },\n    button: {\n      open: false,\n      error: ''\n    },\n    registerStatus: false\n  };\n\n  handleNameInput = (event) => {\n    let validateStatus = validate(\"name\", event.target.value);\n    this.setState({\n      name: {\n          value: event.target.value,\n          hasError: validateStatus.name,\n          error: (validateStatus.name) ? 'Are you a daughter of Elon Musk?' : ''\n        }\n    });\n  };\n\n  handleEmailInput = (event) => {\n    let validateStatus = validate(\"email\", event.target.value);\n    let existStatus = false;\n    let api = checkEmailExist(event.target.value)\n              .then(message => this.setState({\n                email: {\n                  exist: message\n                }\n              }));\n    console.log(this.state.email.exist);\n    this.setState({\n      email: {\n          value: event.target.value,\n          hasError: validateStatus.email,\n          error: (validateStatus.email) ? 'Invalid email address' : ''\n        }\n    });\n  };\n\n  handlePhoneInput = (event) => {\n    let validateStatus = validate(\"phone\", event.target.value);\n    this.setState({\n      phone: {\n          value: event.target.value,\n          hasError: validateStatus.phone,\n          error: (validateStatus.phone) ? 'Must have 10 numbers' : ''\n        }\n    });\n  }\n\n  handlePasswordInput = (event) => {\n    this.setState({\n      password: {\n          value: event.target.value,\n          hasError: false,\n          error: ''\n        }\n    });\n  };\n\n  handleConfirmedPasswordInput = (event) => {\n    let passwordStatus = (event.target.value === this.state.password.value);\n    this.setState({\n      confirmedPassword: {\n          value: event.target.value,\n          hasError: !passwordStatus,\n          error: (!passwordStatus) ? 'Password doesn\\'t match.' : ''\n        }\n    });\n  };\n\n  handleDialogClose = () => {\n    this.setState({\n      button: {\n        open: false,\n        error: ''\n      }\n    })\n  }\n\n  handleSubmit = () => {\n    const dialogStatus = {\n      dialogMessage: '',\n      dialogHasError: false\n    };\n\n    if (this.state.name.hasError) {\n      dialogStatus.dialogHasError = true;\n      dialogStatus.dialogMessage = 'The given name is invalid. Name must not contain numbers and special characters.';\n    } else if (this.state.email.hasError) {\n      dialogStatus.dialogHasError = true;\n      dialogStatus.dialogMessage = 'The given email is invalid. Please input the valid email';\n    } else if (this.state.phone.hasError) {\n      dialogStatus.dialogHasError = true;\n      dialogStatus.dialogMessage = 'Phone number is invalid. Phone number must contain 10 numbers.';\n    } else if (this.state.confirmedPassword.hasError) {\n      dialogStatus.dialogHasError = true;\n      dialogStatus.dialogMessage = 'Please confirm the password again. Confirmed password should be the same with password.';\n    }\n    this.setState({\n      button: {\n        open: dialogStatus.dialogHasError,\n        error: dialogStatus.dialogMessage\n      }\n    });\n\n    let api = register(this.state.name.value, this.state.email.value, this.state.password.value, this.state.phone.value)\n              .then(message => this.setState({\n                registerStatus: message\n              }));\n    console.log(this.state.registerStatus);\n\n    if (!dialogStatus.dialogHasError) {\n      this.props.history.push(\"/login\");\n    }\n    //else {}\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className = {classes.paper}>\n          <Avatar className = {classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component = \"h1\" variant = \"h5\">\n            Sign up\n          </Typography>\n          <form className = {classes.form}>\n            <Grid container spacing = {2}>\n              {/* Name Input */}\n              <Grid item xs = {12}>\n                <TextField\n                  autoComplete  = \"name\"\n                  name          = \"Name\"\n                  variant       = \"outlined\"\n                  required\n                  fullWidth\n                  id            = \"Name\"\n                  label         = \"Name\"\n                  autoFocus\n                  value         = { this.state.name.value }\n                  error         = { this.state.name.hasError }\n                  helperText    = { this.state.name.error }\n                  onChange      = { this.handleNameInput }\n                />\n              </Grid>\n              {/* Email Input */}\n              <Grid item xs = {12} sm = {6}>\n                <TextField\n                  variant       = \"outlined\"\n                  required\n                  fullWidth\n                  id            = \"email\"\n                  label         = \"Email Address\"\n                  name          = \"email\"\n                  autoComplete  = \"email\"\n                  value         = { this.state.email.value }\n                  error         = { this.state.email.hasError }\n                  helperText    = { this.state.email.error }\n                  onChange      = { this.handleEmailInput }\n                />\n              </Grid>\n              {/* Phone Input */}\n              <Grid item xs = {12} sm = {6}>\n                <TextField\n                  variant       = \"outlined\"\n                  required\n                  fullWidth\n                  id            = \"phone\"\n                  label         = \"Phone Number\"\n                  name          = \"phone\"\n                  autoComplete  = \"phone\"\n                  value         = { this.state.phone.value }\n                  error         = { this.state.phone.hasError }\n                  helperText    = { this.state.phone.error }\n                  onChange      = { this.handlePhoneInput }\n                />\n              </Grid>\n              {/* Password Input */}\n              <Grid item xs = {12}>\n                <TextField\n                  variant       = \"outlined\"\n                  required\n                  fullWidth\n                  name          = \"password\"\n                  label         = \"Password\"\n                  type          = \"password\"\n                  id            = \"password\"\n                  autoComplete  = \"current-password\"\n                  value         = { this.state.password.value }\n                  error         = { this.state.password.hasError }\n                  helperText    = { this.state.password.error }\n                  onChange      = { this.handlePasswordInput }\n                />\n              </Grid>\n              {/* ConfirmedPassword Input */}\n              <Grid item xs = {12}>\n                <TextField\n                  variant       = \"outlined\"\n                  required\n                  fullWidth\n                  name          = \"confirmedPassword\"\n                  label         = \"ConfirmedPassword\"\n                  type          = \"password\"\n                  id            = \"Confirmed Password Again\"\n                  autoComplete  = \"current-password\"\n                  value         = { this.state.confirmedPassword.value }\n                  error         = { this.state.confirmedPassword.hasError }\n                  helperText    = { this.state.confirmedPassword.error }\n                  onChange      = { this.handleConfirmedPasswordInput }\n                />\n              </Grid>\n            </Grid>\n            <Button\n              className         = { classes.submit }\n              fullWidth\n              variant           = \"contained\"\n              color             = \"primary\"\n              onClick           = { this.handleSubmit }\n            >\n              Sign Up\n            </Button>\n            <Dialog\n              open              = { this.state.button.open }\n              onClose           = { this.handleDialogClose }\n              aria-describedby  = \"alert-dialog-description\"\n            >\n              <DialogContent>\n                <DialogContentText id = \"alert-dialog-description\">\n                  { this.state.button.error }\n                </DialogContentText>\n              </DialogContent>\n              <DialogActions>\n                <Button onClick = { this.handleDialogClose } color = \"primary\">\n                  Got it!\n                </Button>\n              </DialogActions>\n            </Dialog>\n            <Grid container justify=\"flex-end\">\n              <Grid item>\n                <Link component = { RouteLink } to = '/login'>\n                  <Typography variant = \"body2\" align = \"right\">\n                    Already have an account? Sign in\n                  </Typography>\n                </Link>\n              </Grid>\n            </Grid>\n          </form>\n        </div>\n      </Container>\n    );\n  };\n}\n\nexport default withStyles(style, { withTheme: true })(Register);\n","import React, {Component} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport {withStyles} from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\nimport {Link as RouteLink} from 'react-router-dom';\nimport AppBar from '@material-ui/core/AppBar';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport StarIcon from '@material-ui/icons/StarBorder';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Container from '@material-ui/core/Container';\n\nconst style = (theme) => ({\n    '@global': {\n        ul: {\n            margin: 0,\n            padding: 0,\n            listStyle: 'none',\n        },\n    },\n    appBar: {\n        borderBottom: `1px solid ${theme.palette.divider}`,\n    },\n    toolbar: {\n        flexWrap: 'wrap',\n    },\n    toolbarTitle: {\n        flexGrow: 1,\n    },\n    link: {\n        margin: theme.spacing(1, 1.5),\n    },\n    heroContent: {\n        padding: theme.spacing(8, 0, 6),\n    },\n    cardHeader: {\n        backgroundColor:\n            theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[700],\n    },\n    cardPricing: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'baseline',\n        marginBottom: theme.spacing(2),\n    },\n    footer: {\n        borderTop: `1px solid ${theme.palette.divider}`,\n        marginTop: theme.spacing(8),\n        paddingTop: theme.spacing(3),\n        paddingBottom: theme.spacing(3),\n        [theme.breakpoints.up('sm')]: {\n            paddingTop: theme.spacing(6),\n            paddingBottom: theme.spacing(6),\n        }\n    }\n});\n\nclass Home extends Component {\n    componentDidMount() {\n        if (sessionStorage.getItem(\"redirect\") !== null) {\n            this.props.history.push(sessionStorage.redirect);\n            sessionStorage.removeItem(\"redirect\");\n        }\n    }\n\n    render() {\n        const {classes} = this.props;\n\n        return (\n            <React.Fragment>\n                <CssBaseline/>\n                <AppBar position=\"static\" color=\"primary\" elevation={0} className={classes.appBar}>\n                    <Toolbar className={classes.toolbar}>\n                        <Typography variant=\"h6\" color=\"inherit\" noWrap className={classes.toolbarTitle}>\n                            IU Hospital\n                        </Typography>\n                        <Button href=\"/login\"\n                                color=\"inherit\"\n                                className={classes.link}>\n                            Login</Button>\n                        <Button href=\"/register\"\n                                color=\"inherit\"\n                                className={classes.link}>\n                            Register</Button>\n                    </Toolbar>\n                </AppBar>\n                {/* Hero unit */}\n                <Container maxWidth=\"sm\" component=\"main\" className={classes.heroContent}>\n                    <Typography component=\"h1\" variant=\"h3\" align=\"center\" color=\"textPrimary\" gutterBottom>\n                        Treatment in the best hospital of Vietnam\n                    </Typography>\n                    <Typography component=\"p\" variant=\"h6\" align=\"center\" color=\"textSecondary\">\n                        some text here about the system\n                    </Typography>\n                </Container>\n                <Container maxWidth=\"xs\" component=\"main\">\n                    <Grid container>\n                        <Grid item xs>\n                            <Link component={RouteLink} to=\"/login\">\n                                <Typography variant=\"body1\" align=\"center\">Book now!</Typography>\n                            </Link>\n                        </Grid>\n                        <Grid item xs>\n                            <Link component={RouteLink} to=\"/register\">\n                                <Typography variant=\"body1\" align=\"center\">I'm new here!</Typography>\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </Container>\n                {/* End hero unit */}\n            </React.Fragment>\n        );\n    }\n}\n\nexport default withStyles(style, {withTheme: true})(Home);\n","import React, { Component }               from 'react';\nimport Avatar                             from '@material-ui/core/Avatar';\nimport Button                             from '@material-ui/core/Button';\nimport CssBaseline                        from '@material-ui/core/CssBaseline';\nimport TextField                          from '@material-ui/core/TextField';\nimport FormControlLabel                   from '@material-ui/core/FormControlLabel';\nimport Checkbox                           from '@material-ui/core/Checkbox';\nimport Link                               from '@material-ui/core/Link';\nimport Paper                              from '@material-ui/core/Paper';\nimport Box                                from '@material-ui/core/Box';\nimport Grid                               from '@material-ui/core/Grid';\nimport LockOutlinedIcon                   from '@material-ui/icons/LockOutlined';\nimport Typography                         from '@material-ui/core/Typography';\nimport { withStyles }                     from '@material-ui/core/styles';\nimport Container                          from '@material-ui/core/Container';\nimport Dialog                             from '@material-ui/core/Dialog';\nimport DialogActions                      from '@material-ui/core/DialogActions';\nimport DialogContent                      from '@material-ui/core/DialogContent';\nimport DialogContentText                  from '@material-ui/core/DialogContentText';\nimport DialogTitle                        from '@material-ui/core/DialogTitle';\nimport { BrowserRouter, Route, Switch }   from 'react-router-dom';\nimport { Link as RouteLink }              from 'react-router-dom';\n\n/*\ncan't use hooks because this is a component.\nso we can't useStyles API from Material UI\nuse withStyles instead.\n*/\nconst style = theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  }\n});\n\nclass ForgetPassword extends Component {\n  state = {\n    email: {\n      value: '',\n      hasError: false,\n      error: ''\n    },\n    button: {\n      open: false,\n      error: ''\n    }\n  };\n\n  handleEmailInput = (event) => {\n    const regexp = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n    const checkingResult = {\n      hasError: regexp.exec(event.target.value),\n      error: ''\n    };\n    if (checkingResult.hasError !== null) {\n      checkingResult.hasError = false;\n      checkingResult.error = '';\n    } else {\n      checkingResult.hasError = true;\n      checkingResult.error = 'Invalid email address';\n    }\n    this.setState({\n      email: {\n          value: event.target.value,\n          hasError: checkingResult.hasError,\n          error: checkingResult.error\n        }\n    });\n  };\n\n  handleDialogClose = () => {\n    this.setState({\n      button: {\n        open: false,\n        error: ''\n      }\n    })\n  }\n\n  handleSubmit = () => {\n    const dialogStatus = {\n      dialogMessage: '',\n      dialogHasError: false\n    };\n\n    if (this.state.email.hasError) {\n      dialogStatus.dialogHasError = true;\n      dialogStatus.dialogMessage = 'The given email is invalid. Please input the valid email';\n    }\n\n    this.setState({\n      button: {\n        open: dialogStatus.dialogHasError,\n        error: dialogStatus.dialogMessage\n      }\n    });\n\n    if (!dialogStatus.dialogHasError) {\n      this.props.history.push(\"/\");\n    }\n    //else {}\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className = {classes.paper}>\n          <Avatar className = {classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component = \"h1\" variant = \"h5\">\n            Password Recovery\n          </Typography>\n          <Typography component = \"p\" variant = \"p\">\n            some text here\n          </Typography>\n          <form className = {classes.form}>\n            <Grid container spacing = {2}>\n              {/* Email Input */}\n              <Grid item xs = {12}>\n                <TextField\n                  variant       = \"outlined\"\n                  required\n                  fullWidth\n                  id            = \"email\"\n                  label         = \"Email Address\"\n                  name          = \"email\"\n                  autoComplete  = \"email\"\n                  value         = { this.state.email.value }\n                  error         = { this.state.email.hasError }\n                  helperText    = { this.state.email.error }\n                  onChange      = { this.handleEmailInput }\n                />\n              </Grid>\n            </Grid>\n            <Button\n              className         = { classes.submit }\n              fullWidth\n              variant           = \"contained\"\n              color             = \"primary\"\n              onClick           = { this.handleSubmit }\n            >\n              Submit\n            </Button>\n            <Dialog\n              open              = { this.state.button.open }\n              onClose           = { this.handleDialogClose }\n              aria-describedby  = \"alert-dialog-description\"\n            >\n              <DialogContent>\n                <DialogContentText id = \"alert-dialog-description\">\n                  { this.state.button.error }\n                </DialogContentText>\n              </DialogContent>\n              <DialogActions>\n                <Button onClick = { this.handleDialogClose } color = \"primary\">\n                  Got it!\n                </Button>\n              </DialogActions>\n            </Dialog>\n          </form>\n        </div>\n      </Container>\n    );\n  };\n}\n\nexport default withStyles(style, { withTheme: true })(ForgetPassword);\n","import React, { Component }                     from 'react';\nimport Typography                               from '@material-ui/core/Typography';\n\n\nclass PatientDashboard extends Component {\n  render() {\n    return (\n      <Typography>This is Patient Dashboard</Typography>\n    );\n  }\n}\n\nexport default PatientDashboard;\n","import React, { Component }                     from 'react';\nimport Typography                               from '@material-ui/core/Typography';\n\n\nclass PractitionerDashboard extends Component {\n  render() {\n    return (\n      <Typography>This is Practitioner Dashboard</Typography>\n    );\n  }\n}\n\nexport default PractitionerDashboard;\n","import React, { Component }                     from 'react';\nimport Chip from '@material-ui/core/Chip';\n\nexport const Upcomming = (\n  <Chip variant = \"outlined\"\n          size    = \"small\"\n          label   = \"Upcomming\"\n          color   = \"primary\"/>\n);\n\nexport const Completed = (\n  <Chip variant = \"outlined\"\n          size    = \"small\"\n          label   = \"Completed\"\n          color   = \"secondary\"/>\n);\n","import React, { Component }                     from 'react';\n\nimport clsx                                     from 'clsx';\n\nimport Typography                               from '@material-ui/core/Typography';\nimport Button                                   from '@material-ui/core/Button';\nimport TextField                                from '@material-ui/core/TextField';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport Dialog                             from '@material-ui/core/Dialog';\nimport DialogActions                      from '@material-ui/core/DialogActions';\nimport DialogContent                      from '@material-ui/core/DialogContent';\nimport DialogContentText                  from '@material-ui/core/DialogContentText';\nimport DialogTitle                        from '@material-ui/core/DialogTitle';\n\nimport { Completed, Upcomming }           from '../../components/Services/AppointmentStatus';\n\nfunction createData(id, disease, practitioner, room, time, date, status) {\n  return { id, disease, practitioner, room, time, date, status };\n};\n\nlet rows = [\n  createData('1', 'A', 'A', 'A1.104', '18:00', 'Aug 18', true),\n  createData('2', 'B', 'B', 'A5.104', '16:00', 'Aug 20', false),\n  createData('3', 'A', 'A', 'A1.104', '18:00', 'Aug 18', true),\n  createData('4', 'B', 'B', 'A5.104', '16:00', 'Aug 20', false),\n  createData('5', 'A', 'A', 'A1.104', '18:00', 'Aug 18', true),\n  createData('6', 'B', 'B', 'A5.104', '16:00', 'Aug 20', false),\n  createData('7', 'B', 'B', 'A5.104', '16:00', 'Aug 20', false),\n  createData('8', 'A', 'A', 'A1.104', '18:00', 'Aug 18', true),\n  createData('9', 'A', 'A', 'A1.104', '18:00', 'Aug 18', true),\n  createData('10', 'A', 'A', 'A1.104', '18:00', 'Aug 18', true),\n  createData('6', 'B', 'B', 'A5.104', '16:00', 'Aug 20', false),\n  createData('7', 'B', 'B', 'A5.104', '16:00', 'Aug 20', false),\n  createData('8', 'A', 'A', 'A1.104', '18:00', 'Aug 18', true),\n  createData('9', 'A', 'A', 'A1.104', '18:00', 'Aug 18', true),\n  createData('10', 'A', 'A', 'A1.104', '18:00', 'Aug 18', true)\n];\n\nlet columns = [\n  { id: 'disease', label: 'Disease' },\n  { id: 'practitioner', label: 'Practitioner' },\n  { id: 'room', label: 'Room', align: 'right'},\n  { id: 'time', label: 'Time', align: 'right'},\n  { id: 'date', label: 'Date', align: 'right'},\n  { id: 'status', label: 'Status', align: 'right'}\n]\n\nclass PatientAppointmentTable extends Component {\n  state = {\n    editDialog: false,\n    newDialog: false\n  };\n  handleRowClick = (event, row) => {\n    console.log(\"Row click\", row);\n    if (row.status) {\n      this.setState({\n        editDialog: true\n      });\n    }\n  };\n  handleNewClick = () => {\n    this.setState({\n      newDialog: true\n    });\n  };\n  handleEditDialogClose = () => {\n    this.setState({\n      editDialog: false\n    });\n  };\n  handleNewDialogClose = () => {\n    this.setState({\n      newDialog: false\n    });\n  };\n  handleSave = () => {\n    this.setState({\n      editDialog: false\n    });\n  };\n  handleDelete = () => {\n    this.setState({\n      editDialog: false\n    });\n  };\n  handleNew = () => {\n    this.setState({\n      editDialog: false\n    });\n  };\n  render() {\n    return (\n      <React.Fragment>\n        <Typography component = \"h2\" variant = \"h6\" color = \"primary\" gutterBottom>Upcomming appointment</Typography>\n        <TableContainer>\n          <Table size = \"medium\" stickyHeader>\n            <TableHead>\n              <TableRow>\n                {columns.map((column) => (\n                    <TableCell key = { column.id } align = { column.align }>\n                      { (column.label == 'Status')\n                        ? <Button variant       = \"contained\"\n                                  color         = \"primary\"\n                                  align         = \"right\"\n                                  onClick       = { this.handleNewClick }>\n                            New\n                          </Button>\n                        : column.label }\n                    </TableCell>\n                  ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              { rows.map((row) => {\n                return (\n                    <TableRow hover key = { row.id } onClick = { (event) => this.handleRowClick(event, row) }>\n                      { columns.map((column) => {\n                        return (\n                          <TableCell key = { column.id } align = { column.align }>\n                            { (column.id == 'status')\n                            ? row[column.id] ? Upcomming : Completed\n                            : row[column.id] }\n                          </TableCell>\n                        );\n                      })}\n                    </TableRow>\n                  );\n              })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <Dialog\n          open              = { this.state.editDialog }\n          onClose           = { this.handleEditDialogClose }\n          aria-labelledby=\"form-dialog-title\">\n          <DialogTitle id=\"form-dialog-title\">Subscribe</DialogTitle>\n          <DialogContent>\n            <DialogContentText id = \"alert-dialog-description\">\n            To subscribe to this website, please enter your email address here. We will send updates\n            occasionally.\n            </DialogContentText>\n            <TextField\n              autoFocus\n              variant       = \"outlined\"\n              margin        = \"normal\"\n              id            = \"name\"\n              label         = \"Email Address\"\n              type          = \"email\"\n              fullWidth\n            />\n            <TextField\n              autoFocus\n              variant       = \"outlined\"\n              margin        = \"normal\"\n              id            = \"name\"\n              label         = \"Name\"\n              fullWidth\n            />\n            <TextField\n              autoFocus\n              variant       = \"outlined\"\n              margin        = \"normal\"\n              id            = \"name\"\n              label         = \"Date\"\n              fullWidth\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick = { this.handleSave } color = \"primary\" align = \"right\">\n              Save\n            </Button>\n            <Button onClick = { this.handleDelete } color = \"primary\" align = \"left\">\n              Delete\n            </Button>\n          </DialogActions>\n        </Dialog>\n        <Dialog\n          open              = { this.state.newDialog }\n          onClose           = { this.handleNewDialogClose }\n          aria-labelledby=\"form-dialog-title\">\n          <DialogTitle id=\"form-dialog-title\">Make new appointment</DialogTitle>\n          <DialogContent>\n            <DialogContentText id = \"alert-dialog-description\">\n              To make new appointment, please enter your information here.\n            </DialogContentText>\n            <TextField\n              autoFocus\n              variant       = \"outlined\"\n              margin        = \"normal\"\n              id            = \"name\"\n              label         = \"Email Address\"\n              type          = \"email\"\n              fullWidth\n            />\n            <TextField\n              autoFocus\n              variant       = \"outlined\"\n              margin        = \"normal\"\n              id            = \"name\"\n              label         = \"Name\"\n              fullWidth\n            />\n            <TextField\n              autoFocus\n              variant       = \"outlined\"\n              margin        = \"normal\"\n              id            = \"name\"\n              label         = \"Date\"\n              fullWidth\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick = { this.handleNew } color = \"primary\" align = \"right\">\n              Save\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default PatientAppointmentTable;\n","import React, { Component }                         from 'react';\nimport ListItem                       from '@material-ui/core/ListItem';\nimport ListItemIcon                   from '@material-ui/core/ListItemIcon';\nimport ListItemText                   from '@material-ui/core/ListItemText';\nimport ListSubheader                  from '@material-ui/core/ListSubheader';\nimport DashboardIcon                  from '@material-ui/icons/Dashboard';\nimport ShoppingCartIcon               from '@material-ui/icons/ShoppingCart';\nimport PeopleIcon                     from '@material-ui/icons/People';\nimport BarChartIcon                   from '@material-ui/icons/BarChart';\nimport LayersIcon                     from '@material-ui/icons/Layers';\nimport AssignmentIcon                 from '@material-ui/icons/Assignment';\nimport { BrowserRouter, Route, Switch }   from 'react-router-dom';\nimport { Link as RouteLink }              from 'react-router-dom';\n\nlet admin = [\n  { id: 'Dashboard', link: '/dashboard'},\n  { id: 'Practitioner', link: '/dashboard'},\n  { id: 'Patient', link: '/dashboard'},\n  { id: 'Appointment', link: '/dashboard'}\n];\n\nlet practitioner = [\n  { id: 'Dashboard', link: '/dashboard'},\n  { id: 'Patient', link: '/dashboard'},\n  { id: 'Appointment', link: '/dashboard'}\n];\n\nlet patient = [\n  { id: 'Dashboard', link: '/dashboard'},\n  { id: 'Appointment', link: '/dashboard'}\n];\n\nclass SidebarFunction extends Component {\n  render() {\n    let funcs = (this.props.type != 'admin') ? (this.props.type != 'practitioner') ? patient : practitioner : admin;\n    return (\n      <div>{\n        funcs.map((func) => (\n          <ListItem button component = { RouteLink } to = { func.link }>\n            <ListItemIcon>\n              <DashboardIcon />\n            </ListItemIcon>\n            <ListItemText primary = { func.id } />\n          </ListItem>\n        ))\n      }</div>\n    );\n  }\n}\n\nexport default SidebarFunction;\n","import React, { Component }                     from 'react';\nimport { BrowserRouter, Route, Switch }         from 'react-router-dom';\nimport { Link as RouteLink }                    from 'react-router-dom';\n\nimport clsx                                     from 'clsx';\n\nimport { withStyles }                           from '@material-ui/core/styles';\nimport CssBaseline                              from '@material-ui/core/CssBaseline';\nimport Drawer                                   from '@material-ui/core/Drawer';\nimport Box                                      from '@material-ui/core/Box';\nimport AppBar                                   from '@material-ui/core/AppBar';\nimport Toolbar                                  from '@material-ui/core/Toolbar';\nimport List                                     from '@material-ui/core/List';\nimport Typography                               from '@material-ui/core/Typography';\nimport Divider                                  from '@material-ui/core/Divider';\nimport IconButton                               from '@material-ui/core/IconButton';\nimport Badge                                    from '@material-ui/core/Badge';\nimport Container                                from '@material-ui/core/Container';\nimport Grid                                     from '@material-ui/core/Grid';\nimport Paper                                    from '@material-ui/core/Paper';\nimport Link                                     from '@material-ui/core/Link';\nimport Button                                   from '@material-ui/core/Button';\nimport TextField                                from '@material-ui/core/TextField';\n\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport Dialog                             from '@material-ui/core/Dialog';\nimport DialogActions                      from '@material-ui/core/DialogActions';\nimport DialogContent                      from '@material-ui/core/DialogContent';\nimport DialogContentText                  from '@material-ui/core/DialogContentText';\nimport DialogTitle                        from '@material-ui/core/DialogTitle';\n\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined';\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\n\nimport MenuIcon                                 from '@material-ui/icons/Menu';\nimport ChevronLeftIcon                          from '@material-ui/icons/ChevronLeft';\n\nimport SidebarFunction from './SidebarFunction';\n\nconst style = (theme) => ({\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    marginLeft: 240,\n    width: `calc(100% - ${240}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: 240,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9)\n    }\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar\n  },\n  toolbar: {\n    paddingRight: 24 // keep right padding when drawer closed\n  },\n  menuButton: {\n    marginRight: 36\n  },\n  menuButtonHidden: {\n    display: 'none'\n  },\n  title: {\n    flexGrow: 1\n  },\n\n});\n\nclass DrawerAppBar extends Component {\n  state = {\n    barOpen: false\n  }\n\n  handleDrawer = () => {\n    this.setState({\n      barOpen: !this.state.barOpen\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <React.Fragment>\n        <AppBar position = \"absolute\" className = { clsx(classes.appBar, this.state.barOpen && classes.appBarShift) }>\n          <Toolbar className = { classes.toolbar }>\n            <IconButton\n              edge        = \"start\"\n              color       = \"inherit\"\n              aria-label  = \"open drawer\"\n              onClick     = { this.handleDrawer }\n              className   = { clsx(classes.menuButton, this.state.barOpen && classes.menuButtonHidden) }\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography component = \"h1\" variant = \"h6\" color = \"inherit\" noWrap className = { classes.title }>\n              Dashboard\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <Drawer\n          variant = \"permanent\"\n          classes = { { paper: clsx(classes.drawerPaper, !this.state.barOpen && classes.drawerPaperClose) } }\n          open    = { this.state.barOpen }>\n          <div className = { classes.toolbarIcon}>\n            <IconButton onClick = { this.handleDrawer }>\n              <ChevronLeftIcon />\n            </IconButton>\n          </div>\n          <Divider />\n          <List>{\n            <SidebarFunction type = { this.props.type } />\n          }</List>\n        </Drawer>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withStyles(style, { withTheme: true })(DrawerAppBar);\n","import React, { Component }                     from 'react';\nimport { BrowserRouter, Route, Switch }         from 'react-router-dom';\nimport { Link as RouteLink }                    from 'react-router-dom';\n\nimport clsx                                     from 'clsx';\n\nimport { withStyles }                           from '@material-ui/core/styles';\nimport CssBaseline                              from '@material-ui/core/CssBaseline';\nimport Drawer                                   from '@material-ui/core/Drawer';\nimport Box                                      from '@material-ui/core/Box';\nimport AppBar                                   from '@material-ui/core/AppBar';\nimport Toolbar                                  from '@material-ui/core/Toolbar';\nimport List                                     from '@material-ui/core/List';\nimport Typography                               from '@material-ui/core/Typography';\nimport Divider                                  from '@material-ui/core/Divider';\nimport IconButton                               from '@material-ui/core/IconButton';\nimport Badge                                    from '@material-ui/core/Badge';\nimport Container                                from '@material-ui/core/Container';\nimport Grid                                     from '@material-ui/core/Grid';\nimport Paper                                    from '@material-ui/core/Paper';\nimport Link                                     from '@material-ui/core/Link';\nimport Button                                   from '@material-ui/core/Button';\nimport TextField                                from '@material-ui/core/TextField';\n\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport Dialog                             from '@material-ui/core/Dialog';\nimport DialogActions                      from '@material-ui/core/DialogActions';\nimport DialogContent                      from '@material-ui/core/DialogContent';\nimport DialogContentText                  from '@material-ui/core/DialogContentText';\nimport DialogTitle                        from '@material-ui/core/DialogTitle';\n\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined';\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\n\nimport MenuIcon                                 from '@material-ui/icons/Menu';\nimport ChevronLeftIcon                          from '@material-ui/icons/ChevronLeft';\n\nimport AppointmentTable from '../../Table/AppointmentTable';\nimport PractitionerTable from '../../Table/PractitionerTable';\nimport PatientTable from '../../Table/PatientTable';\nimport DrawerAppBar from '../../Others/DrawerAppBar';\nconst style = (theme) => ({\n  root: {\n    display: 'flex'\n  },\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto'\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4)\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n    height: 680\n  }\n});\n\nclass AdminDashboard extends Component {\n  state = {\n    view: ''\n  }\n\n  getViewFromDrawerAppBar = (viewFromDrawerAppBar) => {\n    this.setState({ view: viewFromDrawerAppBar });\n  }\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className = { classes.root }>\n        <CssBaseline />\n        <DrawerAppBar type = \"admin\" view = { this.getViewFromDrawerAppBar } />\n        <main className = { classes.content }>\n          <div className = { classes.appBarSpacer } />\n          <Container maxWidth = \"lg\" className = { classes.container }>\n            <Grid container spacing = {3}>\n              <Grid item xs = {12}>\n                <Paper className = { classes.paper }>\n                  <AppointmentTable />\n                </Paper>\n              </Grid>\n            </Grid>\n          </Container>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(style, { withTheme: true })(AdminDashboard);\n","import React                              from 'react';\nimport logo                               from './logo.svg';\nimport { BrowserRouter, Route, Switch }   from 'react-router-dom';\n\nimport Login                              from './containers/Authentication/Login';\nimport Register                           from './containers/Authentication/Register';\nimport Home                               from './containers/Authentication/Home';\nimport ForgetPassword                     from './containers/Authentication/ForgetPassword';\n\nimport PatientDashboard                   from './containers/Dashboard/Patient/PatientDashboard';\nimport PractitionerDashboard              from './containers/Dashboard/Practitioner/PractitionerDashboard';\nimport AdminDashboard                     from './containers/Dashboard/Admin/AdminDashboard';\n\nimport './App.css';\n\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path = \"/login\"                          component = { Login }/>\n        <Route path = \"/register\"                       component = { Register } />\n        <Route path = \"/forgetPassword\"                 component = { ForgetPassword } />\n        <Route path = \"/patientDashboard\"               component = { PatientDashboard } />\n        <Route path = \"/practitionerDashboard\"          component = { PractitionerDashboard } />\n        <Route path = \"/dashboard\"                      component = { AdminDashboard } />\n        <Route path = \"/\"                               component = { Home } />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}