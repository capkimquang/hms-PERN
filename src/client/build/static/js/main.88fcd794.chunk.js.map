{"version":3,"sources":["logo.svg","components/API/Login.js","containers/Authentication/Login.js","components/Services/Validate.js","components/API/CheckEmailExist.js","components/API/Register.js","containers/Authentication/Register.js","containers/Authentication/Home.js","containers/Authentication/ForgetPassword.js","containers/Authentication/loginTest.js","containers/Dashboard/Patient/PatientDashboard.js","containers/Dashboard/Practitioner/PractitionerDashboard.js","containers/Dashboard/Admin/AdminDashboard.js","App.js","index.js"],"names":["module","exports","login","username","password","a","data","email","axios","post","res","loginStatus","Login","state","value","hasError","error","button","open","handleEmailInput","event","checkingResult","exec","target","setState","handlePasswordInput","handleDialogClose","handleSubmit","dialogStatus","dialogMessage","dialogHasError","api_res","console","log","classes","this","props","Grid","container","component","className","root","CssBaseline","item","xs","sm","md","image","Paper","elevation","square","paper","Avatar","avatar","Typography","variant","form","TextField","margin","id","label","name","autoComplete","autoFocus","required","fullWidth","helperText","onChange","type","FormControlLabel","control","Checkbox","color","Button","submit","onClick","Dialog","onClose","aria-describedby","DialogContent","DialogContentText","DialogActions","Link","RouteLink","to","align","Component","withStyles","theme","height","backgroundImage","backgroundRepeat","backgroundColor","palette","grey","backgroundSize","backgroundPosition","spacing","display","flexDirection","alignItems","secondary","main","width","marginTop","withTheme","validate","pattern","status","phone","nameStatus","checkEmailExist","emailStatus","register","Register","exist","confirmedPassword","registerStatus","handleNameInput","validateStatus","then","message","handlePhoneInput","handleConfirmedPasswordInput","passwordStatus","history","push","Container","maxWidth","justify","Home","Fragment","AppBar","position","appBar","Toolbar","toolbar","noWrap","toolbarTitle","href","link","heroContent","gutterBottom","ul","padding","listStyle","borderBottom","divider","flexWrap","flexGrow","cardHeader","cardPricing","justifyContent","marginBottom","footer","borderTop","paddingTop","paddingBottom","breakpoints","up","ForgetPassword","loginTest","createData","calories","fat","carbs","protein","rows","PractitionerDashboard","handleDrawer","handleEdit","handleDelete","clsx","fixedHeight","appBarShift","IconButton","edge","aria-label","menuButton","menuButtonHidden","title","Drawer","drawerPaper","drawerPaperClose","toolbarIcon","content","appBarSpacer","Table","stickyHeader","size","TableHead","TableRow","TableCell","TableBody","map","row","key","scope","fontSize","paddingRight","mixins","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","enteringScreen","marginRight","whiteSpace","overflowX","overflow","typography","h1","fontWeight","h6","fixedHeightPaper","lg","App","useHistory","useEffect","sessionStorage","getItem","redirect","removeItem","path","PatientDashboard","AdminDashboard","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.88fcd794.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import axios from 'axios';\n\nexport const login = async (username, password) => {\n  let data = {\n    email: username,\n    password: password\n  }\n\n  let res = await axios.post('http://localhost:3001/user/login', data);\n  return res.data.loginStatus;\n}\n","import React, { Component }               from 'react';\nimport { BrowserRouter, Route, Switch }   from 'react-router-dom';\nimport { Link as RouteLink }              from 'react-router-dom';\n\nimport axios                              from 'axios';\n\nimport Avatar                             from '@material-ui/core/Avatar';\nimport Button                             from '@material-ui/core/Button';\nimport CssBaseline                        from '@material-ui/core/CssBaseline';\nimport TextField                          from '@material-ui/core/TextField';\nimport FormControlLabel                   from '@material-ui/core/FormControlLabel';\nimport Checkbox                           from '@material-ui/core/Checkbox';\nimport Link                               from '@material-ui/core/Link';\nimport Paper                              from '@material-ui/core/Paper';\nimport Box                                from '@material-ui/core/Box';\nimport Grid                               from '@material-ui/core/Grid';\nimport LockOutlinedIcon                   from '@material-ui/icons/LockOutlined';\nimport Typography                         from '@material-ui/core/Typography';\nimport { withStyles }                     from '@material-ui/core/styles';\nimport Container                          from '@material-ui/core/Container';\nimport Dialog                             from '@material-ui/core/Dialog';\nimport DialogActions                      from '@material-ui/core/DialogActions';\nimport DialogContent                      from '@material-ui/core/DialogContent';\nimport DialogContentText                  from '@material-ui/core/DialogContentText';\nimport DialogTitle                        from '@material-ui/core/DialogTitle';\n\nimport { login }                          from \"../../components/API/Login\";\n\nconst style = (theme) => ({\n  root: {\n    height: '100vh'\n  },\n  image: {\n    backgroundImage: 'url(https://images.unsplash.com/photo-1551076805-e1869033e561?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2980&q=80)',\n    backgroundRepeat: 'no-repeat',\n    backgroundColor:\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n    backgroundSize: 'cover',\n    backgroundPosition: 'center'\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n});\n\nclass Login extends Component {\n  state = {\n    email: {\n      value: '',\n      hasError: false,\n      error: ''\n    },\n    password: {\n      value: '',\n      hasError: false,\n      error: ''\n    },\n    button: {\n      open: false,\n      error: ''\n    },\n    loginStatus: false\n  };\n\n  // login = async (username, password) => {\n  //   let data = {\n  //     email: username,\n  //     password: password\n  //   }\n  //   let res = await axios.post('http://localhost:3001/user/login', data);\n  //   console.log(res);\n  // }\n\n  handleEmailInput = (event) => {\n    const regexp = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n    const checkingResult = {\n      hasError: regexp.exec(event.target.value),\n      error: ''\n    };\n    if (checkingResult.hasError !== null) {\n      checkingResult.hasError = false;\n      checkingResult.error = '';\n    } else {\n      checkingResult.hasError = true;\n      checkingResult.error = 'invalid email address';\n    }\n    this.setState({\n      email: {\n        value: event.target.value,\n        hasError: checkingResult.hasError,\n        error: checkingResult.error\n      }\n    });\n  };\n  handlePasswordInput = (event) => {\n    this.setState({\n      password: {\n        value: event.target.value,\n        hasError: false,\n        error: ''\n      }\n    });\n  };\n  handleDialogClose = () => {\n      this.setState({\n        button: {\n          open: false,\n          error: ''\n        }\n      })\n  };\n  handleSubmit = async () => {\n      const dialogStatus = {\n        dialogMessage: '',\n        dialogHasError: false\n      };\n\n      if (this.state.email.hasError) {\n        dialogStatus.dialogHasError = true;\n        dialogStatus.dialogMessage = 'The given email is invalid. Please input the valid email.';\n        this.setState({\n          button: {\n            open: dialogStatus.dialogHasError,\n            error: dialogStatus.dialogMessage\n          }\n        });\n      }\n\n      // let res = axios.post('http://localhost:3001/user/login', {\n      //   email: this.state.email.value,\n      //   password: this.state.password.value\n      // }).then(res => this.setState({\n      //   loginStatus: res.data.loginStatus\n      // }));\n      //\n      // console.log(this.state.loginStatus);\n      let api_res = await login(this.state.email.value, this.state.password.value);\n      console.log(api_res);\n\n      // this.setState({\n      //             loginStatus: api_res['loginStatus'];\n      //           }));\n      //\n      // console.log(this.state.loginStatus);\n      // this.setState(\n      //   loginStatus: api.response\n      // )\n        // this.props.history.push(\"/loginTest\");\n      // if (this.state.loginStatus) this.props.history.push(\"/dashboard\");\n      };\n\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <Grid container component = \"main\" className = {classes.root}>\n        <CssBaseline />\n        <Grid item xs = {false} sm = {4} md = {7} className = {classes.image} />\n        <Grid item xs = {12} sm = {8} md = {5} component = {Paper} elevation = {6} square>\n          <div className = { classes.paper }>\n            <Avatar className = { classes.avatar }>\n              <LockOutlinedIcon />\n            </Avatar>\n            <Typography component = \"h1\" variant = \"h5\"> Login </Typography>\n            <form className = { classes.form }>\n              <TextField\n                variant       = \"outlined\"\n                margin        = \"normal\"\n                id            = \"email\"\n                label         = \"Email Address\"\n                name          = \"email\"\n                autoComplete  = \"email\"\n                autoFocus\n                required\n                fullWidth\n                value         = { this.state.email.value }\n                error         = { this.state.email.hasError }\n                helperText    = { this.state.email.error }\n                onChange      = { this.handleEmailInput }\n              />\n              <TextField\n                variant       = \"outlined\"\n                margin        = \"normal\"\n                name          = \"password\"\n                label         = \"Password\"\n                type          = \"password\"\n                id            = \"password\"\n                autoComplete  = \"current-password\"\n                required\n                fullWidth\n                value         = { this.state.password.value }\n                error         = { this.state.password.hasError }\n                helperText    = { this.state.password.error }\n                onChange      = { this.handlePasswordInput }\n              />\n              <FormControlLabel\n                control       = {\n                  <Checkbox value = \"remember\" color = \"primary\" />\n                }\n                label         = \"Remember me\"\n              />\n              <Button\n                fullWidth\n                variant       = \"contained\"\n                color         = \"primary\"\n                className     = { classes.submit }\n                onClick       = { this.handleSubmit }\n              >\n                Login\n              </Button>\n              <Dialog\n                open              = { this.state.button.open }\n                onClose           = { this.handleDialogClose }\n                aria-describedby  = \"alert-dialog-description\"\n              >\n                <DialogContent>\n                  <DialogContentText id = \"alert-dialog-description\">\n                    { this.state.button.error }\n                  </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                  <Button onClick = { this.handleDialogClose } color = \"primary\">\n                    Got it!\n                  </Button>\n                </DialogActions>\n              </Dialog>\n              <Grid container>\n                <Grid item xs>\n                  <Link component = { RouteLink } to = \"/forgetPassword\">\n                    <Typography variant = \"body2\" align = \"left\">Forgot password</Typography>\n                  </Link>\n                </Grid>\n                <Grid item xs>\n                  <Link component = { RouteLink } to = \"/register\">\n                    <Typography variant = \"body2\" align = \"right\">Don't have an account?</Typography>\n                  </Link>\n                </Grid>\n              </Grid>\n            </form>\n          </div>\n        </Grid>\n      </Grid>\n    );\n  };\n}\n\nexport default withStyles(style, { withTheme: true })(Login);\n","export const validate = (type, value) => {\n  const validate = {\n    name: {\n      pattern: /^[a-zA-ZàáâãèéêìíòóôõùúýÀÁÂÈÉÊÌÍÒÓÔÙÚÝ ]+$/u,\n      status: false\n    },\n    email: {\n      pattern: /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/,\n      status: false\n    },\n    phone: {\n      pattern: /^\\d{10}$/,\n      status: false\n    }\n  };\n\n  const res = {\n    name: false,\n    email: false,\n    phone: false\n  };\n\n  if (type === \"name\") {\n    res.name = (validate.name.pattern.exec(value) !== null) ? false : true;\n  } else if (type === \"email\") {\n    let nameStatus = validate.email.pattern.exec(value);\n    if (nameStatus !== null) res.email = false;\n    else res.email = true;\n  } else if (type === \"phone\") {\n    let nameStatus = validate.phone.pattern.exec(value);\n    if (nameStatus !== null) res.phone = false;\n    else res.phone = true;\n  }\n\n  return res;\n}\n","import axios from 'axios';\n\nexport const checkEmailExist = async (email) => {\n  let data = {\n    email: email\n  }\n\n  let res = await axios.post('http://localhost:3001/user/checkEmailExist', data);\n  return res.data.emailStatus;\n}\n","import axios from 'axios';\n\nexport const register = async (name, email, password, phone) => {\n  let data = {\n    name: name,\n    email: email,\n    password: password,\n    phone: phone\n  }\n\n  let res = await axios.post('http://localhost:3001/user/login', data);\n  return res.data.loginStatus;\n}\n","\nimport React, { Component }               from 'react';\n\nimport { BrowserRouter, Route, Switch }   from 'react-router-dom';\nimport { Link as RouteLink }              from 'react-router-dom';\n\nimport Avatar                             from '@material-ui/core/Avatar';\nimport Button                             from '@material-ui/core/Button';\nimport CssBaseline                        from '@material-ui/core/CssBaseline';\nimport TextField                          from '@material-ui/core/TextField';\nimport FormControlLabel                   from '@material-ui/core/FormControlLabel';\nimport Checkbox                           from '@material-ui/core/Checkbox';\nimport Link                               from '@material-ui/core/Link';\nimport Paper                              from '@material-ui/core/Paper';\nimport Box                                from '@material-ui/core/Box';\nimport Grid                               from '@material-ui/core/Grid';\nimport Typography                         from '@material-ui/core/Typography';\nimport { withStyles }                     from '@material-ui/core/styles';\nimport Container                          from '@material-ui/core/Container';\nimport Dialog                             from '@material-ui/core/Dialog';\nimport DialogActions                      from '@material-ui/core/DialogActions';\nimport DialogContent                      from '@material-ui/core/DialogContent';\nimport DialogContentText                  from '@material-ui/core/DialogContentText';\nimport DialogTitle                        from '@material-ui/core/DialogTitle';\n\nimport LockOutlinedIcon                   from '@material-ui/icons/LockOutlined';\n\nimport { validate }                       from '../../components/Services/Validate';\n\n// API -----------------------------------\nimport { checkEmailExist }                from '../../components/API/CheckEmailExist';\nimport { register }                       from '../../components/API/Register';\n/*\ncan't use hooks because this is a component.\nso we can't useStyles API from Material UI\nuse withStyles instead.\n*/\nconst style = theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  }\n});\n\nclass Register extends Component {\n  state = {\n    name: {\n      value: '',\n      hasError: false,\n      error: ''\n    },\n    email: {\n      value: '',\n      hasError: false,\n      exist: false,\n      error: ''\n    },\n    phone: {\n      value: '',\n      hasError: false,\n      error: ''\n    },\n    password: {\n      value: '',\n      hasError: false,\n      error: ''\n    },\n    confirmedPassword: {\n      value: '',\n      hasError: false,\n      error: ''\n    },\n    button: {\n      open: false,\n      error: ''\n    },\n    registerStatus: false\n  };\n\n  handleNameInput = (event) => {\n    let validateStatus = validate(\"name\", event.target.value);\n    this.setState({\n      name: {\n          value: event.target.value,\n          hasError: validateStatus.name,\n          error: (validateStatus.name) ? 'Are you a daughter of Elon Musk?' : ''\n        }\n    });\n  };\n\n  handleEmailInput = (event) => {\n    let validateStatus = validate(\"email\", event.target.value);\n    let existStatus = false;\n    let api = checkEmailExist(event.target.value)\n              .then(message => this.setState({\n                email: {\n                  exist: message\n                }\n              }));\n    console.log(this.state.email.exist);\n    this.setState({\n      email: {\n          value: event.target.value,\n          hasError: validateStatus.email,\n          error: (validateStatus.email) ? 'Invalid email address' : ''\n        }\n    });\n  };\n\n  handlePhoneInput = (event) => {\n    let validateStatus = validate(\"phone\", event.target.value);\n    this.setState({\n      phone: {\n          value: event.target.value,\n          hasError: validateStatus.phone,\n          error: (validateStatus.phone) ? 'Must have 10 numbers' : ''\n        }\n    });\n  }\n\n  handlePasswordInput = (event) => {\n    this.setState({\n      password: {\n          value: event.target.value,\n          hasError: false,\n          error: ''\n        }\n    });\n  };\n\n  handleConfirmedPasswordInput = (event) => {\n    let passwordStatus = (event.target.value === this.state.password.value);\n    this.setState({\n      confirmedPassword: {\n          value: event.target.value,\n          hasError: !passwordStatus,\n          error: (!passwordStatus) ? 'Password doesn\\'t match.' : ''\n        }\n    });\n  };\n\n  handleDialogClose = () => {\n    this.setState({\n      button: {\n        open: false,\n        error: ''\n      }\n    })\n  }\n\n  handleSubmit = () => {\n    const dialogStatus = {\n      dialogMessage: '',\n      dialogHasError: false\n    };\n\n    if (this.state.name.hasError) {\n      dialogStatus.dialogHasError = true;\n      dialogStatus.dialogMessage = 'The given name is invalid. Name must not contain numbers and special characters.';\n    } else if (this.state.email.hasError) {\n      dialogStatus.dialogHasError = true;\n      dialogStatus.dialogMessage = 'The given email is invalid. Please input the valid email';\n    } else if (this.state.phone.hasError) {\n      dialogStatus.dialogHasError = true;\n      dialogStatus.dialogMessage = 'Phone number is invalid. Phone number must contain 10 numbers.';\n    } else if (this.state.confirmedPassword.hasError) {\n      dialogStatus.dialogHasError = true;\n      dialogStatus.dialogMessage = 'Please confirm the password again. Confirmed password should be the same with password.';\n    }\n    this.setState({\n      button: {\n        open: dialogStatus.dialogHasError,\n        error: dialogStatus.dialogMessage\n      }\n    });\n\n    let api = register(this.state.name.value, this.state.email.value, this.state.password.value, this.state.phone.value)\n              .then(message => this.setState({\n                registerStatus: message\n              }));\n    console.log(this.state.registerStatus);\n\n    if (!dialogStatus.dialogHasError) {\n      this.props.history.push(\"/login\");\n    }\n    //else {}\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className = {classes.paper}>\n          <Avatar className = {classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component = \"h1\" variant = \"h5\">\n            Sign up\n          </Typography>\n          <form className = {classes.form}>\n            <Grid container spacing = {2}>\n              {/* Name Input */}\n              <Grid item xs = {12}>\n                <TextField\n                  autoComplete  = \"name\"\n                  name          = \"Name\"\n                  variant       = \"outlined\"\n                  required\n                  fullWidth\n                  id            = \"Name\"\n                  label         = \"Name\"\n                  autoFocus\n                  value         = { this.state.name.value }\n                  error         = { this.state.name.hasError }\n                  helperText    = { this.state.name.error }\n                  onChange      = { this.handleNameInput }\n                />\n              </Grid>\n              {/* Email Input */}\n              <Grid item xs = {12} sm = {6}>\n                <TextField\n                  variant       = \"outlined\"\n                  required\n                  fullWidth\n                  id            = \"email\"\n                  label         = \"Email Address\"\n                  name          = \"email\"\n                  autoComplete  = \"email\"\n                  value         = { this.state.email.value }\n                  error         = { this.state.email.hasError }\n                  helperText    = { this.state.email.error }\n                  onChange      = { this.handleEmailInput }\n                />\n              </Grid>\n              {/* Phone Input */}\n              <Grid item xs = {12} sm = {6}>\n                <TextField\n                  variant       = \"outlined\"\n                  required\n                  fullWidth\n                  id            = \"phone\"\n                  label         = \"Phone Number\"\n                  name          = \"phone\"\n                  autoComplete  = \"phone\"\n                  value         = { this.state.phone.value }\n                  error         = { this.state.phone.hasError }\n                  helperText    = { this.state.phone.error }\n                  onChange      = { this.handlePhoneInput }\n                />\n              </Grid>\n              {/* Password Input */}\n              <Grid item xs = {12}>\n                <TextField\n                  variant       = \"outlined\"\n                  required\n                  fullWidth\n                  name          = \"password\"\n                  label         = \"Password\"\n                  type          = \"password\"\n                  id            = \"password\"\n                  autoComplete  = \"current-password\"\n                  value         = { this.state.password.value }\n                  error         = { this.state.password.hasError }\n                  helperText    = { this.state.password.error }\n                  onChange      = { this.handlePasswordInput }\n                />\n              </Grid>\n              {/* ConfirmedPassword Input */}\n              <Grid item xs = {12}>\n                <TextField\n                  variant       = \"outlined\"\n                  required\n                  fullWidth\n                  name          = \"confirmedPassword\"\n                  label         = \"ConfirmedPassword\"\n                  type          = \"password\"\n                  id            = \"Confirmed Password Again\"\n                  autoComplete  = \"current-password\"\n                  value         = { this.state.confirmedPassword.value }\n                  error         = { this.state.confirmedPassword.hasError }\n                  helperText    = { this.state.confirmedPassword.error }\n                  onChange      = { this.handleConfirmedPasswordInput }\n                />\n              </Grid>\n            </Grid>\n            <Button\n              className         = { classes.submit }\n              fullWidth\n              variant           = \"contained\"\n              color             = \"primary\"\n              onClick           = { this.handleSubmit }\n            >\n              Sign Up\n            </Button>\n            <Dialog\n              open              = { this.state.button.open }\n              onClose           = { this.handleDialogClose }\n              aria-describedby  = \"alert-dialog-description\"\n            >\n              <DialogContent>\n                <DialogContentText id = \"alert-dialog-description\">\n                  { this.state.button.error }\n                </DialogContentText>\n              </DialogContent>\n              <DialogActions>\n                <Button onClick = { this.handleDialogClose } color = \"primary\">\n                  Got it!\n                </Button>\n              </DialogActions>\n            </Dialog>\n            <Grid container justify=\"flex-end\">\n              <Grid item>\n                <Link component = { RouteLink } to = '/login'>\n                  <Typography variant = \"body2\" align = \"right\">\n                    Already have an account? Sign in\n                  </Typography>\n                </Link>\n              </Grid>\n            </Grid>\n          </form>\n        </div>\n      </Container>\n    );\n  };\n}\n\nexport default withStyles(style, { withTheme: true })(Register);\n","import React, { Component }               from 'react';\nimport Avatar                             from '@material-ui/core/Avatar';\nimport Button                             from '@material-ui/core/Button';\nimport CssBaseline                        from '@material-ui/core/CssBaseline';\nimport TextField                          from '@material-ui/core/TextField';\nimport FormControlLabel                   from '@material-ui/core/FormControlLabel';\nimport Checkbox                           from '@material-ui/core/Checkbox';\nimport Link                               from '@material-ui/core/Link';\nimport Paper                              from '@material-ui/core/Paper';\nimport Box                                from '@material-ui/core/Box';\nimport Grid                               from '@material-ui/core/Grid';\nimport LockOutlinedIcon                   from '@material-ui/icons/LockOutlined';\nimport Typography                         from '@material-ui/core/Typography';\nimport { withStyles }                     from '@material-ui/core/styles';\nimport Dialog                             from '@material-ui/core/Dialog';\nimport DialogActions                      from '@material-ui/core/DialogActions';\nimport DialogContent                      from '@material-ui/core/DialogContent';\nimport DialogContentText                  from '@material-ui/core/DialogContentText';\nimport DialogTitle                        from '@material-ui/core/DialogTitle';\nimport { BrowserRouter, Route, Switch }   from 'react-router-dom';\nimport { Link as RouteLink }              from 'react-router-dom';\nimport AppBar                             from '@material-ui/core/AppBar';\nimport Card                               from '@material-ui/core/Card';\nimport CardActions                        from '@material-ui/core/CardActions';\nimport CardContent                        from '@material-ui/core/CardContent';\nimport CardHeader                         from '@material-ui/core/CardHeader';\nimport StarIcon                           from '@material-ui/icons/StarBorder';\nimport Toolbar                            from '@material-ui/core/Toolbar';\nimport Container                          from '@material-ui/core/Container';\n\nconst style = (theme) => ({\n  '@global': {\n    ul: {\n      margin: 0,\n      padding: 0,\n      listStyle: 'none',\n    },\n  },\n  appBar: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n  },\n  toolbar: {\n    flexWrap: 'wrap',\n  },\n  toolbarTitle: {\n    flexGrow: 1,\n  },\n  link: {\n    margin: theme.spacing(1, 1.5),\n  },\n  heroContent: {\n    padding: theme.spacing(8, 0, 6),\n  },\n  cardHeader: {\n    backgroundColor:\n      theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[700],\n  },\n  cardPricing: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'baseline',\n    marginBottom: theme.spacing(2),\n  },\n  footer: {\n    borderTop: `1px solid ${theme.palette.divider}`,\n    marginTop: theme.spacing(8),\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3),\n    [theme.breakpoints.up('sm')]: {\n      paddingTop: theme.spacing(6),\n      paddingBottom: theme.spacing(6),\n    }\n  }\n});\n\nclass Home extends Component {\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <AppBar position = \"static\" color = \"primary\" elevation = {0} className = { classes.appBar }>\n          <Toolbar className = { classes.toolbar }>\n            <Typography variant = \"h6\" color = \"inherit\" noWrap className = { classes.toolbarTitle }>\n              IU Hospital\n            </Typography>\n            <Button href      = \"/login\"\n                    color     = \"inherit\"\n                    className = { classes.link }>\n                    Login</Button>\n            <Button href      = \"/register\"\n                    color     = \"inherit\"\n                    className = { classes.link }>\n                    Register</Button>\n          </Toolbar>\n        </AppBar>\n        {/* Hero unit */}\n        <Container maxWidth = \"sm\" component = \"main\" className = { classes.heroContent }>\n          <Typography component = \"h1\" variant = \"h3\" align = \"center\" color = \"textPrimary\" gutterBottom>\n            Treatment in the best hospital of Vietnam\n          </Typography>\n          <Typography component = \"p\" variant = \"h6\" align = \"center\" color = \"textSecondary\">\n            some text here about the system\n          </Typography>\n        </Container>\n        <Container maxWidth = \"xs\" component = \"main\">\n        <Grid container>\n          <Grid item xs>\n            <Link component = { RouteLink } to = \"/login\">\n              <Typography variant = \"body1\" align = \"center\">Book now!</Typography>\n            </Link>\n          </Grid>\n          <Grid item xs>\n            <Link component = { RouteLink } to = \"/register\">\n              <Typography variant = \"body1\" align = \"center\">I'm new here!</Typography>\n            </Link>\n          </Grid>\n        </Grid>\n        </Container>\n        {/* End hero unit */}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withStyles(style, { withTheme: true })(Home);\n","import React, { Component }               from 'react';\nimport Avatar                             from '@material-ui/core/Avatar';\nimport Button                             from '@material-ui/core/Button';\nimport CssBaseline                        from '@material-ui/core/CssBaseline';\nimport TextField                          from '@material-ui/core/TextField';\nimport FormControlLabel                   from '@material-ui/core/FormControlLabel';\nimport Checkbox                           from '@material-ui/core/Checkbox';\nimport Link                               from '@material-ui/core/Link';\nimport Paper                              from '@material-ui/core/Paper';\nimport Box                                from '@material-ui/core/Box';\nimport Grid                               from '@material-ui/core/Grid';\nimport LockOutlinedIcon                   from '@material-ui/icons/LockOutlined';\nimport Typography                         from '@material-ui/core/Typography';\nimport { withStyles }                     from '@material-ui/core/styles';\nimport Container                          from '@material-ui/core/Container';\nimport Dialog                             from '@material-ui/core/Dialog';\nimport DialogActions                      from '@material-ui/core/DialogActions';\nimport DialogContent                      from '@material-ui/core/DialogContent';\nimport DialogContentText                  from '@material-ui/core/DialogContentText';\nimport DialogTitle                        from '@material-ui/core/DialogTitle';\nimport { BrowserRouter, Route, Switch }   from 'react-router-dom';\nimport { Link as RouteLink }              from 'react-router-dom';\n\n/*\ncan't use hooks because this is a component.\nso we can't useStyles API from Material UI\nuse withStyles instead.\n*/\nconst style = theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  }\n});\n\nclass ForgetPassword extends Component {\n  state = {\n    email: {\n      value: '',\n      hasError: false,\n      error: ''\n    },\n    button: {\n      open: false,\n      error: ''\n    }\n  };\n\n  handleEmailInput = (event) => {\n    const regexp = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n    const checkingResult = {\n      hasError: regexp.exec(event.target.value),\n      error: ''\n    };\n    if (checkingResult.hasError !== null) {\n      checkingResult.hasError = false;\n      checkingResult.error = '';\n    } else {\n      checkingResult.hasError = true;\n      checkingResult.error = 'Invalid email address';\n    }\n    this.setState({\n      email: {\n          value: event.target.value,\n          hasError: checkingResult.hasError,\n          error: checkingResult.error\n        }\n    });\n  };\n\n  handleDialogClose = () => {\n    this.setState({\n      button: {\n        open: false,\n        error: ''\n      }\n    })\n  }\n\n  handleSubmit = () => {\n    const dialogStatus = {\n      dialogMessage: '',\n      dialogHasError: false\n    };\n\n    if (this.state.email.hasError) {\n      dialogStatus.dialogHasError = true;\n      dialogStatus.dialogMessage = 'The given email is invalid. Please input the valid email';\n    }\n\n    this.setState({\n      button: {\n        open: dialogStatus.dialogHasError,\n        error: dialogStatus.dialogMessage\n      }\n    });\n\n    if (!dialogStatus.dialogHasError) {\n      this.props.history.push(\"/\");\n    }\n    //else {}\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className = {classes.paper}>\n          <Avatar className = {classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component = \"h1\" variant = \"h5\">\n            Password Recovery\n          </Typography>\n          <Typography component = \"p\" variant = \"p\">\n            some text here\n          </Typography>\n          <form className = {classes.form}>\n            <Grid container spacing = {2}>\n              {/* Email Input */}\n              <Grid item xs = {12}>\n                <TextField\n                  variant       = \"outlined\"\n                  required\n                  fullWidth\n                  id            = \"email\"\n                  label         = \"Email Address\"\n                  name          = \"email\"\n                  autoComplete  = \"email\"\n                  value         = { this.state.email.value }\n                  error         = { this.state.email.hasError }\n                  helperText    = { this.state.email.error }\n                  onChange      = { this.handleEmailInput }\n                />\n              </Grid>\n            </Grid>\n            <Button\n              className         = { classes.submit }\n              fullWidth\n              variant           = \"contained\"\n              color             = \"primary\"\n              onClick           = { this.handleSubmit }\n            >\n              Submit\n            </Button>\n            <Dialog\n              open              = { this.state.button.open }\n              onClose           = { this.handleDialogClose }\n              aria-describedby  = \"alert-dialog-description\"\n            >\n              <DialogContent>\n                <DialogContentText id = \"alert-dialog-description\">\n                  { this.state.button.error }\n                </DialogContentText>\n              </DialogContent>\n              <DialogActions>\n                <Button onClick = { this.handleDialogClose } color = \"primary\">\n                  Got it!\n                </Button>\n              </DialogActions>\n            </Dialog>\n          </form>\n        </div>\n      </Container>\n    );\n  };\n}\n\nexport default withStyles(style, { withTheme: true })(ForgetPassword);\n","import React, { Component }               from 'react';\nimport Avatar                             from '@material-ui/core/Avatar';\nimport Button                             from '@material-ui/core/Button';\nimport CssBaseline                        from '@material-ui/core/CssBaseline';\nimport TextField                          from '@material-ui/core/TextField';\nimport FormControlLabel                   from '@material-ui/core/FormControlLabel';\nimport Checkbox                           from '@material-ui/core/Checkbox';\nimport Link                               from '@material-ui/core/Link';\nimport Paper                              from '@material-ui/core/Paper';\nimport Box                                from '@material-ui/core/Box';\nimport Grid                               from '@material-ui/core/Grid';\nimport LockOutlinedIcon                   from '@material-ui/icons/LockOutlined';\nimport Typography                         from '@material-ui/core/Typography';\nimport { withStyles }                     from '@material-ui/core/styles';\nimport Container                          from '@material-ui/core/Container';\nimport Dialog                             from '@material-ui/core/Dialog';\nimport DialogActions                      from '@material-ui/core/DialogActions';\nimport DialogContent                      from '@material-ui/core/DialogContent';\nimport DialogContentText                  from '@material-ui/core/DialogContentText';\nimport DialogTitle                        from '@material-ui/core/DialogTitle';\nimport { BrowserRouter, Route, Switch }   from 'react-router-dom';\n\nclass loginTest extends Component {\n  render() {\n    return (\n      <h1> Success! </h1>\n    );\n  }\n}\n\nexport default loginTest;\n","import React, { Component }                     from 'react';\nimport { BrowserRouter, Route, Switch }         from 'react-router-dom';\nimport { Link as RouteLink }                    from 'react-router-dom';\n\nimport clsx                                     from 'clsx';\n\nimport { withStyles }                           from '@material-ui/core/styles';\nimport CssBaseline                              from '@material-ui/core/CssBaseline';\nimport Drawer                                   from '@material-ui/core/Drawer';\nimport Box                                      from '@material-ui/core/Box';\nimport AppBar                                   from '@material-ui/core/AppBar';\nimport Toolbar                                  from '@material-ui/core/Toolbar';\nimport List                                     from '@material-ui/core/List';\nimport Typography                               from '@material-ui/core/Typography';\nimport Divider                                  from '@material-ui/core/Divider';\nimport IconButton                               from '@material-ui/core/IconButton';\nimport Badge                                    from '@material-ui/core/Badge';\nimport Container                                from '@material-ui/core/Container';\nimport Grid                                     from '@material-ui/core/Grid';\nimport Paper                                    from '@material-ui/core/Paper';\nimport Link                                     from '@material-ui/core/Link';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport MenuIcon                                 from '@material-ui/icons/Menu';\nimport ChevronLeftIcon                          from '@material-ui/icons/ChevronLeft';\n\nconst style = (theme) => ({\n  root: {\n    display: 'flex'\n  },\n  toolbar: {\n    paddingRight: 24 // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    marginLeft: 240,\n    width: `calc(100% - ${240}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginRight: 36\n  },\n  menuButtonHidden: {\n    display: 'none'\n  },\n  title: {\n    flexGrow: 1\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: 240,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9)\n    }\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto'\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4)\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column'\n  },\n  fixedHeight: {\n    height: 240\n  },\n  typography: {\n    h1: {\n      fontWeight: 500\n    },\n    h6: {\n      fontWeight: 100\n    }\n  }\n});\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return { name, calories, fat, carbs, protein };\n};\n\nlet rows = [\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n  createData('Eclair', 262, 16.0, 24, 6.0),\n  createData('Cupcake', 305, 3.7, 67, 4.3),\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n  createData('Eclair', 262, 16.0, 24, 6.0),\n  createData('Cupcake', 305, 3.7, 67, 4.3),\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\n];\n\nclass PractitionerDashboard extends Component {\n  state = {\n    open: true\n  };\n\n  handleDrawer = () => {\n    this.setState({\n      open: !this.state.open\n    });\n  };\n\n  handleEdit = (event) => {\n    console.log(\"edit clicked\");\n  }\n\n    handleDelete = (event) => {\n      console.log(\"delete clicked\");\n    }\n\n\n  render() {\n    const { classes } = this.props;\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n    return (\n\n      <div className = { classes.root }>\n        <CssBaseline />\n        <AppBar position = \"absolute\" className = { clsx(classes.appBar, this.state.open && classes.appBarShift) }>\n          <Toolbar className = { classes.toolbar }>\n            <IconButton\n              edge        = \"start\"\n              color       = \"inherit\"\n              aria-label  = \"open drawer\"\n              onClick     = { this.handleDrawer }\n              className   = { clsx(classes.menuButton, this.state.open && classes.menuButtonHidden) }\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography component = \"h1\" variant = \"h6\" color = \"inherit\" noWrap className = { classes.title }>\n              Dashboard\n            </Typography>\n            {/*\n            <IconButton color = \"inherit\">\n              <Badge badgeContent = {4} color = \"secondary\">\n                <NotificationsIcon />\n              </Badge>\n            </IconButton>\n            */}\n          </Toolbar>\n        </AppBar>\n        <Drawer\n          variant = \"permanent\"\n          classes = { { paper: clsx(classes.drawerPaper, !this.state.open && classes.drawerPaperClose) } }\n          open    = { this.state.open }>\n          <div className = { classes.toolbarIcon} >\n            <IconButton onClick = { this.handleDrawer }>\n              <ChevronLeftIcon />\n            </IconButton>\n          </div>\n\n        </Drawer>\n        <main className = { classes.content }>\n          <div className = { classes.appBarSpacer } />\n          <Container maxWidth = \"lg\" className = { classes.container }>\n            <Grid container spacing = {3}>\n              <Grid item xs = {12}>\n                <Paper className = { classes.paper }>\n                  <Typography component = \"h2\" variant = \"h6\" color = \"primary\" gutterBottom>Upcomming appointment</Typography>\n                  <Table stickyHeader size = \"small\">\n                      <TableHead>\n                        <TableRow>\n                          <TableCell>Dessert (100g serving)</TableCell>\n                          <TableCell>Calories</TableCell>\n                          <TableCell>Fat&nbsp;(g)</TableCell>\n                          <TableCell>Carbs&nbsp;(g)</TableCell>\n                          <TableCell>Protein&nbsp;(g)</TableCell>\n                          <TableCell></TableCell>\n                          <TableCell></TableCell>\n                        </TableRow>\n                      </TableHead>\n                      <TableBody>\n                        {rows.map((row) => (\n                          <TableRow key = {row.name}>\n                            <TableCell component=\"th\" scope=\"row\">\n                              {row.name}\n                            </TableCell>\n                            <TableCell align = \"right\">{row.calories}</TableCell>\n                            <TableCell align = \"right\">{row.fat}</TableCell>\n                            <TableCell align = \"right\">{row.carbs}</TableCell>\n                            <TableCell align = \"right\">{row.protein}</TableCell>\n                            <TableCell align = \"right\">\n                              <IconButton color = \"inherit\" size = \"small\" onClick = { this.handleEdit }>\n                                <EditIcon fontSize = \"small\" />\n                              </IconButton>\n                            </TableCell>\n                            <TableCell align = \"right\">\n                              <IconButton color = \"inherit\" size = \"small\" onClick = { this.handleDelete }>\n                                <DeleteIcon fontSize = \"small\" />\n                              </IconButton>\n                            </TableCell>\n                          </TableRow>\n                        ))}\n                      </TableBody>\n                  </Table>\n                </Paper>\n              </Grid>\n            </Grid>\n          </Container>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(style, { withTheme: true })(PractitionerDashboard);\n","import React, { Component }                     from 'react';\nimport { BrowserRouter, Route, Switch }         from 'react-router-dom';\nimport { Link as RouteLink }                    from 'react-router-dom';\n\nimport clsx                                     from 'clsx';\n\nimport { withStyles }                           from '@material-ui/core/styles';\nimport CssBaseline                              from '@material-ui/core/CssBaseline';\nimport Drawer                                   from '@material-ui/core/Drawer';\nimport Box                                      from '@material-ui/core/Box';\nimport AppBar                                   from '@material-ui/core/AppBar';\nimport Toolbar                                  from '@material-ui/core/Toolbar';\nimport List                                     from '@material-ui/core/List';\nimport Typography                               from '@material-ui/core/Typography';\nimport Divider                                  from '@material-ui/core/Divider';\nimport IconButton                               from '@material-ui/core/IconButton';\nimport Badge                                    from '@material-ui/core/Badge';\nimport Container                                from '@material-ui/core/Container';\nimport Grid                                     from '@material-ui/core/Grid';\nimport Paper                                    from '@material-ui/core/Paper';\nimport Link                                     from '@material-ui/core/Link';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport MenuIcon                                 from '@material-ui/icons/Menu';\nimport ChevronLeftIcon                          from '@material-ui/icons/ChevronLeft';\n\nconst style = (theme) => ({\n  root: {\n    display: 'flex'\n  },\n  toolbar: {\n    paddingRight: 24 // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    marginLeft: 240,\n    width: `calc(100% - ${240}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginRight: 36\n  },\n  menuButtonHidden: {\n    display: 'none'\n  },\n  title: {\n    flexGrow: 1\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: 240,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9)\n    }\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto'\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4)\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column'\n  },\n  fixedHeight: {\n    height: 240\n  },\n  typography: {\n    h1: {\n      fontWeight: 500\n    },\n    h6: {\n      fontWeight: 100\n    }\n  }\n});\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return { name, calories, fat, carbs, protein };\n};\n\nlet rows = [\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n  createData('Eclair', 262, 16.0, 24, 6.0),\n  createData('Cupcake', 305, 3.7, 67, 4.3),\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n  createData('Eclair', 262, 16.0, 24, 6.0),\n  createData('Cupcake', 305, 3.7, 67, 4.3),\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\n];\n\nclass PractitionerDashboard extends Component {\n  state = {\n    open: true\n  };\n\n  handleDrawer = () => {\n    this.setState({\n      open: !this.state.open\n    });\n  };\n\n  handleEdit = (event) => {\n    console.log(\"edit clicked\");\n  }\n\n    handleDelete = (event) => {\n      console.log(\"delete clicked\");\n    }\n\n\n  render() {\n    const { classes } = this.props;\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n    return (\n\n      <div className = { classes.root }>\n        <CssBaseline />\n        <AppBar position = \"absolute\" className = { clsx(classes.appBar, this.state.open && classes.appBarShift) }>\n          <Toolbar className = { classes.toolbar }>\n            <IconButton\n              edge        = \"start\"\n              color       = \"inherit\"\n              aria-label  = \"open drawer\"\n              onClick     = { this.handleDrawer }\n              className   = { clsx(classes.menuButton, this.state.open && classes.menuButtonHidden) }\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography component = \"h1\" variant = \"h6\" color = \"inherit\" noWrap className = { classes.title }>\n              Dashboard\n            </Typography>\n            {/*\n            <IconButton color = \"inherit\">\n              <Badge badgeContent = {4} color = \"secondary\">\n                <NotificationsIcon />\n              </Badge>\n            </IconButton>\n            */}\n          </Toolbar>\n        </AppBar>\n        <Drawer\n          variant = \"permanent\"\n          classes = { { paper: clsx(classes.drawerPaper, !this.state.open && classes.drawerPaperClose) } }\n          open    = { this.state.open }>\n          <div className = { classes.toolbarIcon} >\n            <IconButton onClick = { this.handleDrawer }>\n              <ChevronLeftIcon />\n            </IconButton>\n          </div>\n\n        </Drawer>\n        <main className = { classes.content }>\n          <div className = { classes.appBarSpacer } />\n          <Container maxWidth = \"lg\" className = { classes.container }>\n            <Grid container spacing = {3}>\n              <Grid item xs = {12}>\n                <Paper className = { classes.paper }>\n                  <Typography component = \"h2\" variant = \"h6\" color = \"primary\" gutterBottom>Upcomming appointment</Typography>\n                  <Table stickyHeader size = \"small\">\n                      <TableHead>\n                        <TableRow>\n                          <TableCell>Dessert (100g serving)</TableCell>\n                          <TableCell>Calories</TableCell>\n                          <TableCell>Fat&nbsp;(g)</TableCell>\n                          <TableCell>Carbs&nbsp;(g)</TableCell>\n                          <TableCell>Protein&nbsp;(g)</TableCell>\n                          <TableCell></TableCell>\n                          <TableCell></TableCell>\n                        </TableRow>\n                      </TableHead>\n                      <TableBody>\n                        {rows.map((row) => (\n                          <TableRow key = {row.name}>\n                            <TableCell component=\"th\" scope=\"row\">\n                              {row.name}\n                            </TableCell>\n                            <TableCell align = \"right\">{row.calories}</TableCell>\n                            <TableCell align = \"right\">{row.fat}</TableCell>\n                            <TableCell align = \"right\">{row.carbs}</TableCell>\n                            <TableCell align = \"right\">{row.protein}</TableCell>\n                            <TableCell align = \"right\">\n                              <IconButton color = \"inherit\" size = \"small\" onClick = { this.handleEdit }>\n                                <EditIcon fontSize = \"small\" />\n                              </IconButton>\n                            </TableCell>\n                            <TableCell align = \"right\">\n                              <IconButton color = \"inherit\" size = \"small\" onClick = { this.handleDelete }>\n                                <DeleteIcon fontSize = \"small\" />\n                              </IconButton>\n                            </TableCell>\n                          </TableRow>\n                        ))}\n                      </TableBody>\n                  </Table>\n                </Paper>\n              </Grid>\n            </Grid>\n          </Container>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(style, { withTheme: true })(PractitionerDashboard);\n","import React, { Component }                     from 'react';\nimport { BrowserRouter, Route, Switch }         from 'react-router-dom';\nimport { Link as RouteLink }                    from 'react-router-dom';\n\nimport clsx                                     from 'clsx';\n\nimport { withStyles }                           from '@material-ui/core/styles';\nimport CssBaseline                              from '@material-ui/core/CssBaseline';\nimport Drawer                                   from '@material-ui/core/Drawer';\nimport Box                                      from '@material-ui/core/Box';\nimport AppBar                                   from '@material-ui/core/AppBar';\nimport Toolbar                                  from '@material-ui/core/Toolbar';\nimport List                                     from '@material-ui/core/List';\nimport Typography                               from '@material-ui/core/Typography';\nimport Divider                                  from '@material-ui/core/Divider';\nimport IconButton                               from '@material-ui/core/IconButton';\nimport Badge                                    from '@material-ui/core/Badge';\nimport Container                                from '@material-ui/core/Container';\nimport Grid                                     from '@material-ui/core/Grid';\nimport Paper                                    from '@material-ui/core/Paper';\nimport Link                                     from '@material-ui/core/Link';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport MenuIcon                                 from '@material-ui/icons/Menu';\nimport ChevronLeftIcon                          from '@material-ui/icons/ChevronLeft';\n\nconst style = (theme) => ({\n  root: {\n    display: 'flex'\n  },\n  toolbar: {\n    paddingRight: 24 // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    marginLeft: 240,\n    width: `calc(100% - ${240}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginRight: 36\n  },\n  menuButtonHidden: {\n    display: 'none'\n  },\n  title: {\n    flexGrow: 1\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: 240,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9)\n    }\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto'\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4)\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column'\n  },\n  fixedHeight: {\n    height: 240\n  },\n  typography: {\n    h1: {\n      fontWeight: 500\n    },\n    h6: {\n      fontWeight: 100\n    }\n  }\n});\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return { name, calories, fat, carbs, protein };\n};\n\nlet rows = [\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n  createData('Eclair', 262, 16.0, 24, 6.0),\n  createData('Cupcake', 305, 3.7, 67, 4.3),\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n  createData('Eclair', 262, 16.0, 24, 6.0),\n  createData('Cupcake', 305, 3.7, 67, 4.3),\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\n];\n\nclass PractitionerDashboard extends Component {\n  state = {\n    open: true\n  };\n\n  handleDrawer = () => {\n    this.setState({\n      open: !this.state.open\n    });\n  };\n\n  handleEdit = (event) => {\n    console.log(\"edit clicked\");\n  }\n\n    handleDelete = (event) => {\n      console.log(\"delete clicked\");\n    }\n\n\n  render() {\n    const { classes } = this.props;\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n    return (\n\n      <div className = { classes.root }>\n        <CssBaseline />\n        <AppBar position = \"absolute\" className = { clsx(classes.appBar, this.state.open && classes.appBarShift) }>\n          <Toolbar className = { classes.toolbar }>\n            <IconButton\n              edge        = \"start\"\n              color       = \"inherit\"\n              aria-label  = \"open drawer\"\n              onClick     = { this.handleDrawer }\n              className   = { clsx(classes.menuButton, this.state.open && classes.menuButtonHidden) }\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography component = \"h1\" variant = \"h6\" color = \"inherit\" noWrap className = { classes.title }>\n              Dashboard\n            </Typography>\n            {/*\n            <IconButton color = \"inherit\">\n              <Badge badgeContent = {4} color = \"secondary\">\n                <NotificationsIcon />\n              </Badge>\n            </IconButton>\n            */}\n          </Toolbar>\n        </AppBar>\n        <Drawer\n          variant = \"permanent\"\n          classes = { { paper: clsx(classes.drawerPaper, !this.state.open && classes.drawerPaperClose) } }\n          open    = { this.state.open }>\n          <div className = { classes.toolbarIcon} >\n            <IconButton onClick = { this.handleDrawer }>\n              <ChevronLeftIcon />\n            </IconButton>\n          </div>\n\n        </Drawer>\n        <main className = { classes.content }>\n          <div className = { classes.appBarSpacer } />\n          <Container maxWidth = \"lg\" className = { classes.container }>\n            <Grid container spacing = {3}>\n              <Grid item xs={12} md={12} lg={12}>\n                <Paper className = { fixedHeightPaper} >\n                  <Typography component = \"h2\" variant = \"h6\">Performance</Typography>\n                </Paper>\n              </Grid>\n              <Grid item xs = {12}>\n                <Paper className = { classes.paper }>\n                  <Typography component = \"h2\" variant = \"h6\" color = \"primary\" gutterBottom>Upcomming appointment</Typography>\n                  <Table stickyHeader size = \"small\">\n                      <TableHead>\n                        <TableRow>\n                          <TableCell>Dessert (100g serving)</TableCell>\n                          <TableCell>Calories</TableCell>\n                          <TableCell>Fat&nbsp;(g)</TableCell>\n                          <TableCell>Carbs&nbsp;(g)</TableCell>\n                          <TableCell>Protein&nbsp;(g)</TableCell>\n                          <TableCell></TableCell>\n                          <TableCell></TableCell>\n                        </TableRow>\n                      </TableHead>\n                      <TableBody>\n                        {rows.map((row) => (\n                          <TableRow key = {row.name}>\n                            <TableCell component=\"th\" scope=\"row\">\n                              {row.name}\n                            </TableCell>\n                            <TableCell align = \"right\">{row.calories}</TableCell>\n                            <TableCell align = \"right\">{row.fat}</TableCell>\n                            <TableCell align = \"right\">{row.carbs}</TableCell>\n                            <TableCell align = \"right\">{row.protein}</TableCell>\n                            <TableCell align = \"right\">\n                              <IconButton color = \"inherit\" size = \"small\" onClick = { this.handleEdit }>\n                                <EditIcon fontSize = \"small\" />\n                              </IconButton>\n                            </TableCell>\n                            <TableCell align = \"right\">\n                              <IconButton color = \"inherit\" size = \"small\" onClick = { this.handleDelete }>\n                                <DeleteIcon fontSize = \"small\" />\n                              </IconButton>\n                            </TableCell>\n                          </TableRow>\n                        ))}\n                      </TableBody>\n                  </Table>\n                </Paper>\n              </Grid>\n            </Grid>\n          </Container>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(style, { withTheme: true })(PractitionerDashboard);\n","import React, {useEffect} from 'react';\nimport logo                               from './logo.svg';\nimport { BrowserRouter, Route, Switch, useHistory }   from 'react-router-dom';\n\nimport Login                              from './containers/Authentication/Login';\nimport Register                           from './containers/Authentication/Register';\nimport Home                               from './containers/Authentication/Home';\nimport ForgetPassword                     from './containers/Authentication/ForgetPassword';\nimport loginTest                          from './containers/Authentication/loginTest';\n\nimport PatientDashboard                   from './containers/Dashboard/Patient/PatientDashboard';\nimport PractitionerDashboard              from './containers/Dashboard/Practitioner/PractitionerDashboard';\nimport AdminDashboard                     from './containers/Dashboard/Admin/AdminDashboard';\n\nimport './App.css';\n\n\nfunction App() {\n    let history = useHistory();\n\n    useEffect(() => {\n        if (sessionStorage.getItem(\"redirect\") !== null)\n        {\n            history.push(sessionStorage.redirect);\n            sessionStorage.removeItem(\"redirect\");\n        }\n    }, [])\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path = \"/login\"              component = { Login }/>\n        <Route path = \"/register\"           component = { Register } />\n        <Route path = \"/loginTest\"          component = { loginTest } />\n        <Route path = \"/forgetPassword\"     component = { ForgetPassword } />\n        <Route path = \"/patientDashboard\"   component = { PatientDashboard } />\n        <Route path = \"/dashboard\"          component = { PractitionerDashboard } />\n        <Route path = \"/adminDashboard\"     component = { AdminDashboard } />\n        <Route path = \"/\"                   component = { Home } />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}