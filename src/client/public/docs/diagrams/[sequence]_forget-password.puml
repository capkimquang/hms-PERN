@startuml
title Forget Password Sequence

actor user as U
boundary website as W
control api
entity authentication as A
entity mailer as M
database Postgres as P

U -> W: GET /login
activate W
U <-- W: login form
deactivate W
loop user still wants to submit
    U -> W: GET /forget-password
    activate W
    U <-- W: email form
    deactivate W
    U -> W: submit email form
    activate W
    W -> api: POST /forget-password
    activate api
    U <-- W: check email reminder\nsubmit again button
    deactivate W
end
api -> A: validate_email(email)
deactivate api
activate A
A -> P: query user by email
activate P
P --> A: rows
deactivate P
alt rows.length == 1
    A -> A: generate_token(rows[0].user_id)
    A -> M: send_reset_pwd_mail(token)
    deactivate A
    activate M
    U <-- M: email containing link to reset password
    deactivate M
end
'    U -> W: GET /reset-password?token=...
'    alt token verified
'        W -> api: /validate-token
'        api -> api: validate_token(token)
'        deactivate api
'        api -> api: decode_token(token)
'        deactivate api
'        api -> api: compare(now,token.expire_time)
'        deactivate api
'            alt token not expired
'                 W <-- api: token data
'                 U <-- W: reset password form
'                 U -> W: submit reset password form
'                 W -> api: POST /reset-password
'                 api -> A: resetpassword(id,pw)
'                 A -> P: update query
'                 A <-- P: update successful
'                 api <-- A: success
'                 W <-- api: success
'                 U <-- W: reset successful announcement\nand redirect to login page
'            else invalid token
'                 W <-- api: invalid token
'                 W -> W: GET /forget-password
'                 U <-- W: invalid token announcement\nand redirect to email form
'            end
'    else invalid token
'        activate W
'        W -> api: /validate-token
'        api -> api: validate_token(token)
'        deactivate api
'        W <-- api: invalid token
'        W -> W: GET /forget-password
'        U <-- W: invalid token announcement\nand redirect to email form
'        deactivate W
'    end
'end
@enduml