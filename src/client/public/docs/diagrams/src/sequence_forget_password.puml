@startuml

title Forget Password Sequence

actor user as U
boundary website as W
control api
entity authentication as A
entity mailer as M
database Postgres as P

== Get Password Reset Link Send to Email  ==

loop user still wants to submit
    U -> W++: GET /forget-password
    return email form
    U -> W++: submit email form
    W -> api++: POST /forget-password
    U <-- W: check email reminder\nsubmit again button
    W--
end
api -> A: validate_email(email)
api --
A++
A -> P: query user by email
activate P
P --> A: rows
deactivate P
alt rows.length == 1
    A -> A++: generate_token(rows[0].user_id)
    A--
    A -> M: send_reset_pwd_mail(token)
    A--
    M++
    U <-- M--: email containing link to reset password
end

== Use Link From Email to Reset Password ==

U -> W ++: GET /reset-password?token=...
W -> api ++: /validate-token
api -> api ++: validate_token(token)
api--
alt token verified
    api -> api++: decode_token(token)
    api--
    api -> api++: compare(now,token.expire_time)
        alt token not expired
            W <-- api: token data
            U <-- W: reset password form
            U -> W++: submit reset password form
            W -> api++: POST /reset-password
            api -> A++: reset_password(id,pw)
            A -> P++: update query
            return update successful
            return success
            return success
            return reset successful announcement\nand redirect to login page
        else token expired
            W <-- api: invalid token
            api--
            W -> W++: GET /forget-password
            W--
            U <-- W: invalid token announcement\nand redirect to email form
        end
else token verifying failed
    return invalid token
    W -> W++: GET /forget-password
    W--
    return invalid token announcement\nand redirect to email form
end
@enduml